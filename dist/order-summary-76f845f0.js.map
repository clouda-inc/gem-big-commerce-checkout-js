{"version":3,"file":"order-summary-76f845f0.js","mappings":"2HAEYA,E,uBAAZ,SAAYA,GACR,2FACA,yFACA,oFACA,gDACA,gEACH,CAND,CAAYA,IAAAA,EAAwB,KAQ7B,IAAMC,IAA6B,MACtC,uCACID,EAAyBE,kCAC7B,wCACIF,EAAyBG,iCAC7B,qCACIH,EAAyBI,+BAC7B,mBAAgCJ,EAAyBK,aACzD,4BAAwCL,EAAyBM,qB,cCNxDC,EAAY,SAAC,G,IAAEC,EAAM,SAGtB,GAEJ,SAAa,mBAFDC,EAAa,gBAAEC,EAAS,YAAEC,EAAW,cAG/CC,EAAaH,IACbI,EAASH,IACTI,EAAWH,IACTI,ECjBiB,WACzB,IAAMC,GAAmB,IAAAC,YAAWC,EAAA,GAEpC,IAAKF,EACD,MAAM,IAAIG,MAAM,4DAGpB,OAAOH,CACX,CDSiCI,GAAe,iBACtCC,EACFT,GAAcC,GAAUC,GAAYC,EAAiBM,gBAAgBb,GACnEc,EAAcrB,EAA8BO,GAYlD,OAVA,IAAAe,YAAU,WACN,GAAIF,EAGA,OAFKN,EAAiBS,gBAAgBF,EAAad,GAE5C,WACHO,EAAiBU,gBAAgBjB,EACrC,CAER,GAAG,CAACc,EAAaP,EAAkBM,EAAiBb,IAEhDa,EACO,uBAAKK,GAAIJ,IAGb,IACX,C,gGE5BA,QAT8C,SAAC,G,IAAEK,EAAQ,WAAO,OAC5D,0BAAQC,UAAU,eACd,sBAAIA,UAAU,iDACV,gBAACC,EAAA,EAAgB,CAACH,GAAG,uBAExBC,EALuD,E,sECuFhE,QA/DwF,SAAC,GACvF,IAAAG,EAAa,gBACbC,EAAK,QACLC,EAAa,gBACbC,EAAe,kBACfC,EAAU,aACVC,EAAmB,sBACnBC,EAAS,YACTC,EAAK,QACFC,GAA0B,cAT0D,oHAWjFC,GAAsB,IAAAC,UAAQ,WAAM,SAAAC,EAAA,GAAmBL,EAAnB,GAA+B,CAACA,IACpEM,EAAsBZ,GAAiBC,GAASA,EAAMY,OAAS,EAErE,OACE,2BAASf,UAAU,sCAAqC,YAAW,QACjE,gBAAC,EAAkB,KAAEM,GAErB,gBAACU,EAAA,EAAmB,KAClB,gBAACC,EAAA,EAAiB,CAACC,uBAAqB,EAACC,MAAOR,KAGlD,gBAAChC,EAAA,EAAS,CAACC,OAAM,2BAEjB,gBAACoC,EAAA,EAAmB,KAClB,gBAACI,EAAA,GAAqB,eACpBlB,cAAeA,EACfC,MAAOA,GACHO,IAELH,GAGH,gBAACS,EAAA,EAAmB,KAClB,gBAACK,EAAA,EAAiB,CAChBC,YAAab,EACbc,oBAAqBlB,EAAgBmB,KACrCC,kBAAmBrB,EAAcoB,QAIpCV,GACC,gBAACE,EAAA,EAAmB,KAClB,sBACEhB,UAAU,uEAAsE,YACtE,YAEV,gBAACC,EAAA,EAAgB,CAACH,GAAG,0BAErBK,GAAS,IAAIuB,KAAI,SAACC,EAAKC,GAAU,OACjC,gBAACC,EAAA,EAAiB,CAChBC,OAAQH,EAAIG,OACZC,IAAKH,EACLI,MAAOL,EAAIM,KACXC,OAAO,cALwB,KAY7C,C","sources":["webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer> = {\n    [ExtensionRegion.ShippingShippingAddressFormBefore]:\n        ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n    [ExtensionRegion.ShippingShippingAddressFormAfter]:\n        ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n    [ExtensionRegion.ShippingSelectedShippingMethod]:\n        ExtensionRegionContainer.ShippingSelectedShippingMethod,\n    [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n    [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n};\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): React.JSX.Element | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, extensionService, isRegionEnabled, region]);\n\n    if (isRegionEnabled) {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\n    <header className=\"cart-header\">\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </h3>\n        {children}\n    </header>\n);\n\nexport default OrderSummaryHeader;\n","import {\n  ExtensionRegion,\n  LineItemMap,\n  ShopperCurrency,\n  StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\n\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryProps {\n  lineItems: LineItemMap;\n  total: number;\n  headerLink: ReactNode;\n  storeCurrency: StoreCurrency;\n  shopperCurrency: ShopperCurrency;\n  additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n  isTaxIncluded,\n  taxes,\n  storeCurrency,\n  shopperCurrency,\n  headerLink,\n  additionalLineItems,\n  lineItems,\n  total,\n  ...orderSummarySubtotalsProps\n}) => {\n  const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n  const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n  return (\n    <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n      <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\n\n      <OrderSummarySection>\n        <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\n      </OrderSummarySection>\n\n      <Extension region={ExtensionRegion.SummaryLastItemAfter} />\n\n      <OrderSummarySection>\n        <OrderSummarySubtotals\n          isTaxIncluded={isTaxIncluded}\n          taxes={taxes}\n          {...orderSummarySubtotalsProps}\n        />\n        {additionalLineItems}\n      </OrderSummarySection>\n\n      <OrderSummarySection>\n        <OrderSummaryTotal\n          orderAmount={total}\n          shopperCurrencyCode={shopperCurrency.code}\n          storeCurrencyCode={storeCurrency.code}\n        />\n      </OrderSummarySection>\n\n      {displayInclusiveTax && (\n        <OrderSummarySection>\n          <h5\n            className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n            data-test=\"tax-text\"\n          >\n            <TranslatedString id=\"tax.inclusive_label\" />\n          </h5>\n          {(taxes || []).map((tax, index) => (\n            <OrderSummaryPrice\n              amount={tax.amount}\n              key={index}\n              label={tax.name}\n              testId=\"cart-taxes\"\n            />\n          ))}\n        </OrderSummarySection>\n      )}\n    </article>\n  );\n};\n\nexport default OrderSummary;\n"],"names":["ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","SummaryAfter","SummaryLastItemAfter","Extension","region","getExtensions","getConfig","getCheckout","extensions","config","checkout","extensionService","extensionContext","useContext","ExtensionContext","Error","useExtensions","isRegionEnabled","containerId","useEffect","renderExtension","removeListeners","id","children","className","TranslatedString","isTaxIncluded","taxes","storeCurrency","shopperCurrency","headerLink","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}