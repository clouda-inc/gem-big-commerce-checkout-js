{"version":3,"file":"checkout-c85aa110.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/image/GIA-certificate.png","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isEqualAddress.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/cart/billingSummary/BillingSummary.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/image/sigin-sigup-form-side-image.png","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/order/customSections/OrderItemCount.tsx","webpack://checkout/./packages/core/src/app/order/customSections/ItemCards/PhysicalItemLineItem.tsx","webpack://checkout/./packages/core/src/app/order/customSections/OrderItemList.tsx","webpack://checkout/./packages/core/src/app/order/customSections/OrderReviewSection.tsx","webpack://checkout/./packages/core/src/app/order/customSections/OrderBillingSummary.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LargeLoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/ui/src/icon/IconClose.tsx","webpack://checkout/./packages/ui/src/modal/Modal.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/GIA-certificate-2a4cafcf.png\";","import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            return { ...state, isShowingLoadingIndicator: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id);\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: HandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../ExtensionProvider';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport * as handlerFactories from './handlers';\nimport { CommandHandler } from './handlers/CommandHandler';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        await this.checkoutService.renderExtension(container, region);\n\n        this.registerHandlers(extension);\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(handlerFactories).forEach((createHandlerFactory) => {\n            const handlerFactory = createHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport const ExtensionProvider = ({ checkoutService, children }: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","/* eslint-disable no-console */\nimport {\n  Address,\n  CheckoutSelectors,\n  Country,\n  FormField,\n  ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\nimport isValidAddress from './isValidAddress';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n  address: Address;\n  type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n  initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n  countries?: Country[];\n  fields?: FormField[];\n}\n\nconst StaticAddress: FunctionComponent<\n  StaticAddressEditableProps & WithCheckoutStaticAddressProps\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\n  const address = localizeAddress(addressWithoutLocalization, countries);\n  const isValid = !fields\n    ? !isEmpty(address)\n    : isValidAddress(\n        address,\n        fields.filter((field) => !field.custom),\n      );\n\n  console.log('isValid : ', isValid, address);\n\n  // return !isValid ? null : (\n  return (\n    <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n      {(address.firstName || address.lastName) && (\n        <p className=\"fn address-entry\">\n          <span className=\"first-name\">{`${address.firstName} `}</span>\n          <span className=\"family-name\">{address.lastName}</span>\n        </p>\n      )}\n\n      {(address.phone || address.company) && (\n        <p className=\"address-entry\">\n          <span className=\"company-name\">{`${address.company} `}</span>\n          <span className=\"tel\">{address.phone}</span>\n        </p>\n      )}\n\n      <div className=\"adr\">\n        <p className=\"street-address address-entry\">\n          <span className=\"address-line-1\">{`${address.address1} `}</span>\n          {address.address2 && <span className=\"address-line-2\">{` / ${address.address2}`}</span>}\n        </p>\n\n        <p className=\"address-entry\">\n          {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n          {address.localizedProvince && (\n            <span className=\"region\">{`${address.localizedProvince}, `}</span>\n          )}\n          {address.postalCode && <span className=\"postal-code\">{`${address.postalCode} / `}</span>}\n          {address.localizedCountry && (\n            <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport function mapToStaticAddressProps(\n  context: CheckoutContextProps,\n  { address, type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n  const {\n    checkoutState: {\n      data: {\n        getBillingCountries,\n        getShippingCountries,\n        getBillingAddressFields,\n        getShippingAddressFields,\n      },\n    },\n  } = context;\n\n  return {\n    countries: type === AddressType.Billing ? getBillingCountries() : getShippingCountries(),\n    fields:\n      type === AddressType.Billing\n        ? getBillingAddressFields(address.countryCode)\n        : type === AddressType.Shipping\n        ? getShippingAddressFields(address.countryCode)\n        : undefined,\n  };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_max_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nexport default function isEqualAddress(\n    address1?: ComparableAddress,\n    address2?: ComparableAddress,\n): boolean {\n    if (!address1 || !address2) {\n        return false;\n    }\n\n    return (\n        isEqual(normalizeAddress(address1), normalizeAddress(address2)) &&\n        isSameState(address1, address2)\n    );\n}\n\nfunction isSameState(address1: ComparableAddress, address2: ComparableAddress): boolean {\n    if (address1.stateOrProvince && address1.stateOrProvince === address2.stateOrProvince) {\n        return true;\n    }\n\n    if (\n        address1.stateOrProvinceCode &&\n        address1.stateOrProvinceCode === address2.stateOrProvinceCode\n    ) {\n        return true;\n    }\n\n    return (\n        address1.stateOrProvince === address2.stateOrProvince &&\n        address1.stateOrProvinceCode === address2.stateOrProvinceCode\n    );\n}\n\nfunction normalizeAddress(address: ComparableAddress) {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'stateOrProvinceCode',\n        'type',\n        'email',\n        'country',\n    ];\n\n    return omit(\n        {\n            ...address,\n            customFields: (address.customFields || []).filter(({ fieldValue }) => !!fieldValue),\n        },\n        ignoredFields,\n    );\n}\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport {\n  isPayPalFastlaneAddress,\n  PoweredByPayPalFastlaneLabel,\n  usePayPalFastlaneAddress,\n} from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport './StaticBillingAddress.scss';\n\nexport interface StaticBillingAddressProps {\n  address: Address;\n  showSameAsShippingLable: boolean;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n  fields: FormField[];\n  payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n  StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY, showSameAsShippingLable }) => {\n  const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n  const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n  if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n    return (\n      <p>\n        <TranslatedString id=\"billing.billing_address_amazonpay\" />\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"billing-address-summary-container\">\n        <div className=\"billing-address-summary-title\">Billing Address</div>\n        <div className=\"static-billing-address-container\">\n          <StaticAddress address={address} type={AddressType.Billing} />\n          <div className=\"static-billing-address-label-container\">\n            <div className=\"static-billing-address-change\">Change</div>\n            {showSameAsShippingLable && (\n              <div className=\"static-billing-address-same\">Same as shipping address</div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n    </>\n  );\n};\n\nexport function mapToStaticBillingAddressProps(\n  { checkoutState }: CheckoutContextProps,\n  { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n  const {\n    data: { getBillingAddressFields, getCheckout },\n  } = checkoutState;\n\n  const checkout = getCheckout();\n\n  return {\n    fields: getBillingAddressFields(address.countryCode),\n    payments: checkout && checkout.payments,\n  };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { LoadingOverlay } from '../ui/loading';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","import { CheckoutRequestBody, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport React, { Component, ReactNode } from 'react';\n\nimport {\n  TranslatedString,\n  withCurrency,\n  WithCurrencyProps,\n  withLanguage,\n  WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withAnalytics } from '../../analytics';\nimport { withCheckout } from '../../checkout';\nimport { WithCheckoutProps } from '../../checkout/Checkout';\n\nimport './BillingSummary.scss';\n\ninterface BillingSummaryProps {\n  checkout: any;\n  isLoading: boolean;\n  updateCheckout(payload: CheckoutRequestBody): Promise<CheckoutSelectors>;\n}\n\ninterface BilingProps {\n  formId: string;\n  isPaymentStepActive: boolean;\n}\n\nclass BillingSummary extends Component<\n  WithCheckoutProps & WithLanguageProps & BillingSummaryProps & WithCurrencyProps & BilingProps\n> {\n  render(): ReactNode {\n    const { checkout, currency, formId, isPaymentStepActive, isLoading, isPending } = this.props;\n    const { subtotal, taxTotal, grandTotal, shippingCostTotal } = checkout;\n    const { discountAmount } = checkout.cart;\n\n    return (\n      <div className=\"checkout-billing-summary-wrapper\">\n        <div className=\"billing-summary\">\n          <div className=\"billing-summary-label\">\n            <TranslatedString id=\"billing-summary.title\" />\n          </div>\n          <div className=\"billing-summary-body\">\n            <div className=\"billing-summary-billing-detail-section\">\n              <div className=\"billing-summary-subtotla-section\">\n                <div className=\"billing-summary-subtotla\">\n                  <TranslatedString id=\"billing-summary.subtotal\" />\n                </div>\n                <div className=\"billing-summary-subtotla-value\">\n                  {currency.toCustomerCurrency(subtotal)}\n                </div>\n              </div>\n              <div className=\"billing-summary-discount-section\">\n                <div className=\"billing-summary-discount\">\n                  <TranslatedString id=\"billing-summary.discount\" />\n                </div>\n                <div className=\"billing-summary-discount-value\">\n                  {currency.toCustomerCurrency(discountAmount)}\n                </div>\n              </div>\n              <div className=\"billing-summary-shipping-section\">\n                <div className=\"billing-summary-shipping\">\n                  <TranslatedString id=\"billing-summary.shipping\" />\n                </div>\n                <div className=\"billing-summary-shipping-value\">\n                  {currency.toCustomerCurrency(shippingCostTotal)}\n                </div>\n              </div>\n              <div className=\"billing-summary-tax-section\">\n                <div className=\"billing-summary-tax\">\n                  <TranslatedString id=\"billing-summary.tax\" />\n                </div>\n                <div className=\"billing-summary-tax-value\">\n                  {currency.toCustomerCurrency(taxTotal)}\n                </div>\n              </div>\n            </div>\n            <div className=\"billing-summary-grand-total-section\">\n              <div className=\"billing-summary-grand-total\">\n                <TranslatedString id=\"billing-summary.total\" />\n              </div>\n              <div className=\"billing-summary-grand-total-value\">\n                {currency.toCustomerCurrency(grandTotal)}\n              </div>\n            </div>\n            <div className=\"billing-summary-payment-button-section\">\n              <div className=\"billing-summary-payment-button-container\">\n                <button\n                  className=\"billing-summary-payment-button\"\n                  disabled={!isPaymentStepActive || isLoading || isPending}\n                  form={formId}\n                  id=\"checkout-payment-continue\"\n                  type=\"submit\"\n                >\n                  Pay {currency.toCustomerCurrency(grandTotal)}\n                </button>\n              </div>\n              <div className=\"billing-summary-privacy-container\">\n                <div className=\"billing-summary-privacy-label\">By purchasing you agree to our</div>\n                <div className=\"billing-summary-privacy-policy\">\n                  <a className=\"billing-summary-privacy-policy-link\">Privacy & Terms Policy</a>\n                </div>\n              </div>\n              <div className=\"billing-summary-policy-container\">\n                <div className=\"billing-summary-shipping-policy\">Shipping Policy</div>\n                <div className=\"billing-summary-return-policy\">Return Policy</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport function mapToBillingSummaryProps({\n  checkoutService,\n  checkoutState,\n}: CheckoutContextProps): BillingSummaryProps | null {\n  const {\n    data: { getCheckout },\n    statuses: { isUpdatingCheckout },\n  } = checkoutState;\n\n  const checkout = getCheckout();\n\n  if (!checkout) {\n    return null;\n  }\n\n  const isLoading = isUpdatingCheckout();\n\n  return {\n    checkout,\n    isLoading,\n    updateCheckout: checkoutService.updateCheckout,\n  };\n}\n\nexport default withCurrency(\n  withAnalytics(withLanguage(withCheckout(mapToBillingSummaryProps)(BillingSummary))),\n);\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","import { isApplePayWindow } from \"../common/utility\";\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'amazonpay':\n            return (\n                <AmazonPayV2Button\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n  isPaymentStepActive: boolean;\n  checkEmbeddedSupport(methodIds: string[]): void;\n  onUnhandledError(error: Error): void;\n  onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n  availableMethodIds: string[];\n  checkoutState: CheckoutSelectors;\n  checkoutService: CheckoutService;\n  isLoading: boolean;\n}\n\nconst paypalCommerceIds = ['paypalcommerce', 'paypalcommercecredit', 'paypalcommercevenmo'];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<\n  CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps\n> = ({\n  availableMethodIds,\n  checkoutService,\n  checkoutState,\n  checkEmbeddedSupport,\n  isLoading,\n  isPaymentStepActive,\n  onUnhandledError,\n  onWalletButtonClick,\n}) => {\n  const { language } = useLocale();\n\n  try {\n    checkEmbeddedSupport(availableMethodIds);\n  } catch (error) {\n    return null;\n  }\n\n  const renderButtons = () =>\n    availableMethodIds.map((methodId) => {\n      if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n        return null;\n      }\n\n      const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n      if (!ResolvedCheckoutButton) {\n        return (\n          <CheckoutButtonV1Resolver\n            deinitialize={checkoutService.deinitializeCustomer}\n            initialize={checkoutService.initializeCustomer}\n            isShowingWalletButtonsOnTop={true}\n            key={methodId}\n            methodId={methodId}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />\n        );\n      }\n\n      return (\n        <ResolvedCheckoutButton\n          checkoutService={checkoutService}\n          checkoutState={checkoutState}\n          containerId={`${methodId}CheckoutButton`}\n          key={methodId}\n          language={language}\n          methodId={methodId}\n          onUnhandledError={onUnhandledError}\n          onWalletButtonClick={onWalletButtonClick}\n        />\n      );\n    });\n\n  return (\n    <div\n      className=\"checkout-button-container\"\n      style={isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined}\n    >\n      <p>\n        <TranslatedString id=\"remote.start_with_text\" />\n      </p>\n      <div className=\"checkout-buttons-auto-layout\">\n        <WalletButtonsContainerSkeleton\n          buttonsCount={availableMethodIds.length}\n          isLoading={isLoading}\n        >\n          <div className=\"checkoutRemote\">{renderButtons()}</div>\n        </WalletButtonsContainerSkeleton>\n      </div>\n      <div className=\"checkout-separator\">\n        <span>\n          <TranslatedString id=\"remote.or_text\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n  const {\n    data: { getConfig, getCustomer, isPaymentDataRequired },\n    statuses: { isInitializedCustomer },\n    errors: { getInitializeCustomerError },\n  } = checkoutState;\n  const config = getConfig();\n  const availableMethodIds = getSupportedMethodIds(\n    config?.checkoutSettings.remoteCheckoutProviders ?? [],\n  );\n  const customer = getCustomer();\n\n  if (!isPaymentDataRequired()) {\n    return null;\n  }\n\n  if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n    return null;\n  }\n\n  const isLoading =\n    availableMethodIds.filter(\n      (methodId) =>\n        Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId),\n    ).length !== availableMethodIds.length;\n\n  return {\n    checkoutService,\n    checkoutState,\n    availableMethodIds,\n    isLoading,\n  };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nimport './CustomerInfo.scss';\n\nexport interface CustomerInfoProps {\n  onSignOut?(event: CustomerSignOutEvent): void;\n  onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n  isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n  email: string;\n  methodId: string;\n  isSignedIn: boolean;\n  isSigningOut: boolean;\n  signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n  email,\n  methodId,\n  isSignedIn,\n  // isSigningOut,\n  onSignOut = noop,\n  onSignOutError = noop,\n  signOut,\n}) => {\n  const handleSignOut: () => Promise<void> = async () => {\n    try {\n      if (isSupportedSignoutMethod(methodId)) {\n        await signOut({ methodId });\n        onSignOut({ isCartEmpty: false });\n        window.location.reload();\n      } else {\n        await signOut();\n        onSignOut({ isCartEmpty: false });\n      }\n    } catch (error) {\n      if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n        onSignOut({ isCartEmpty: true });\n      } else {\n        onSignOutError(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"customerView checkout-customer-info\" data-test=\"checkout-customer-info\">\n      <div\n        className=\"customerView-body optimizedCheckout-contentPrimary checkout-customer-info-email-container\"\n        data-test=\"customer-info\"\n      >\n        <div className=\"checkout-customer-info-email\">\n          <span>\n            {email}\n            {!isSignedIn && ' (Guest)'}\n          </span>\n          {!!email && (\n            <div>\n              <svg\n                fill=\"none\"\n                height=\"15\"\n                viewBox=\"0 0 15 15\"\n                width=\"15\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <circle cx=\"7.65625\" cy=\"7.90723\" fill=\"#024F60\" r=\"7\" />\n                <path d=\"M4.65637 8.82361L6.74036 10.9072L10.6564 5.90723\" stroke=\"white\" />\n              </svg>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"customerView-actions\">\n        {isSignedIn && (\n          <div className=\"customerView-signout-message\">\n            <div\n              className=\"customerView-signout-message-click-here\"\n              data-test=\"sign-out-link\"\n              onClick={handleSignOut}\n            >\n              <TranslatedString id=\"common.click_here\" />\n            </div>\n            <div>\n              <TranslatedString id=\"common.to_logout_to_use_a_different_email\" />\n            </div>\n          </div>\n        )}\n        {!isSignedIn && <div className=\"customerView-action-change\">Change</div>}\n      </div>\n    </div>\n  );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n  checkoutService,\n  checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n  const {\n    data: { getBillingAddress, getCheckout, getCustomer },\n    statuses: { isSigningOut },\n  } = checkoutState;\n\n  const billingAddress = getBillingAddress();\n  const checkout = getCheckout();\n  const customer = getCustomer();\n\n  if (!billingAddress || !checkout || !customer) {\n    return null;\n  }\n\n  const methodId =\n    checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n  return {\n    email: billingAddress.email || customer.email,\n    methodId,\n    isSignedIn: canSignOut(customer, checkout, methodId),\n    isSigningOut: isSigningOut(),\n    signOut: checkoutService.signOutCustomer,\n  };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error' || description),\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","/* eslint-disable no-console */\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n  CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n  formFields: FormField[];\n  createAccountError?: Error;\n  fixNewsletterCheckboxExperimentEnabled: boolean;\n  isCreatingAccount?: boolean;\n  isExecutingPaymentMethodCheckout?: boolean;\n  requiresMarketingConsent: boolean;\n  defaultShouldSubscribe: boolean;\n  isFloatingLabelEnabled?: boolean;\n  onCancel?(): void;\n  onSubmit(values: CreateAccountFormValues): void;\n  errorInSignInEmail?: boolean;\n}\n\nfunction getAcceptsMarketingEmailsDefault(\n  defaultShouldSubscribe: boolean,\n  requiresMarketingConsent: boolean,\n): string[] {\n  if (defaultShouldSubscribe) {\n    return ['1'];\n  }\n\n  return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(\n  formFields: FormField[],\n  defaultShouldSubscribe: boolean,\n): FormField[] {\n  return formFields.map((field) => {\n    if (field.name === 'acceptsMarketingEmails') {\n      const { options } = field;\n      const items = options?.items || [];\n\n      const updatedItems = items.map((item) => {\n        return {\n          value: defaultShouldSubscribe ? '1' : item.value,\n          label: item.label,\n        };\n      });\n\n      return {\n        ...field,\n        options: {\n          items: updatedItems,\n        },\n      };\n    }\n\n    return field;\n  });\n}\n\nconst CreateAccountForm: FunctionComponent<\n  CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({\n  fixNewsletterCheckboxExperimentEnabled,\n  formFields,\n  createAccountError,\n  isCreatingAccount,\n  isExecutingPaymentMethodCheckout,\n  onCancel,\n  isFloatingLabelEnabled,\n  defaultShouldSubscribe,\n  errorInSignInEmail = false,\n}) => {\n  const createAccountErrorMessage = useMemo(() => {\n    if (!createAccountError) {\n      return;\n    }\n\n    if (isRequestError(createAccountError) && createAccountError.status === 409) {\n      const splitMessage = createAccountError.message.split(':');\n\n      if (splitMessage.length > 1) {\n        return (\n          <TranslatedString\n            data={{ email: splitMessage[1].trim() }}\n            id=\"customer.email_in_use_text\"\n          />\n        );\n      }\n\n      return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n    }\n\n    return createAccountError.message;\n  }, [createAccountError]);\n\n  const fields = fixNewsletterCheckboxExperimentEnabled\n    ? transformFormFieldsData(formFields, defaultShouldSubscribe)\n    : formFields;\n\n  return (\n    <Form\n      className=\"checkout-form\"\n      id=\"checkout-customer-returning\"\n      testId=\"checkout-customer-returning\"\n    >\n      <Fieldset>\n        {createAccountErrorMessage && (\n          <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n        )}\n        <div className=\"create-account-form\">\n          {fields.map((field) => {\n            console.log(field);\n\n            return (\n              <>\n                <DynamicFormField\n                  autocomplete={field.name}\n                  extraClass={`dynamic-form-field--${field.name} ${\n                    field.name === 'email' && errorInSignInEmail\n                      ? `dynamic-form-field-error--${field.name}`\n                      : ''\n                  }`}\n                  field={field}\n                  isFloatingLabelEnabled={isFloatingLabelEnabled}\n                  key={field.id}\n                  parentFieldName={field.custom ? 'customFields' : undefined}\n                />\n                {field.name === 'email' && (\n                  <div className=\"sign-up-modal-error\">\n                    {errorInSignInEmail && 'User allready exist'}\n                  </div>\n                )}\n              </>\n            );\n          })}\n        </div>\n      </Fieldset>\n\n      <div className=\"form-actions\">\n        <Button\n          disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n          id=\"checkout-customer-create\"\n          isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n          testId=\"customer-continue-create\"\n          type=\"submit\"\n          variant={ButtonVariant.Primary}\n        >\n          <TranslatedString id=\"customer.sign_in_action\" />\n        </Button>\n\n        <a\n          className=\"button optimizedCheckout-buttonSecondary\"\n          data-test=\"customer-cancel-button\"\n          href=\"#\"\n          id=\"checkout-customer-cancel\"\n          onClick={preventDefault(onCancel)}\n        >\n          <TranslatedString id=\"common.cancel_action\" />\n        </a>\n      </div>\n    </Form>\n  );\n};\n\nexport default withLanguage(\n  withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n    handleSubmit: (values, { props: { onSubmit = noop } }) => {\n      onSubmit(values);\n    },\n    mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      customFields: {},\n      acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(\n        defaultShouldSubscribe,\n        requiresMarketingConsent,\n      ),\n    }),\n    validationSchema: ({ language, formFields }: CreateAccountFormProps & WithLanguageProps) => {\n      const passwordRequirements = formFields.find(\n        ({ requirements }) => requirements,\n      )?.requirements;\n\n      if (!passwordRequirements) {\n        throw new Error('Password requirements missing');\n      }\n\n      const schema = getCreateCustomerValidationSchema({\n        language,\n        formFields,\n        passwordRequirements: getPasswordRequirements(passwordRequirements),\n      });\n\n      return schema;\n    },\n  })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n  isFloatingLabelEnabled?: boolean;\n  onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n  const renderInput = useCallback(\n    (props: FieldProps) => (\n      <TextInput\n        {...props.field}\n        autoComplete={props.field.name}\n        id={props.field.name}\n        isFloatingLabelEnabled={isFloatingLabelEnabled}\n        type=\"email\"\n      />\n    ),\n    [isFloatingLabelEnabled],\n  );\n\n  const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n  return (\n    <FormField\n      input={renderInput}\n      isFloatingLabelEnabled={isFloatingLabelEnabled}\n      labelContent={labelContent}\n      name=\"email\"\n      onChange={onChange}\n    />\n  );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { LoadingSpinner } from '../ui/loading';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport {\n  // FieldProps,\n  FormikProps,\n  withFormik,\n} from 'formik';\nimport React, {\n  FunctionComponent,\n  memo,\n  ReactNode,\n  // useCallback\n} from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n// import { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport {\n  // BasicFormField,\n  Fieldset,\n  Form,\n  Legend,\n} from '../ui/form';\n\nimport EmailField from './EmailField';\n// import SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\nimport './GuestForm.scss';\n\nfunction getShouldSubscribeValue(\n  requiresMarketingConsent: boolean,\n  defaultShouldSubscribe: boolean,\n) {\n  if (SubscribeSessionStorage.getSubscribeStatus()) {\n    return true;\n  }\n\n  return requiresMarketingConsent ? false : defaultShouldSubscribe;\n}\n\nexport interface GuestFormProps {\n  canSubscribe: boolean;\n  checkoutButtons?: ReactNode;\n  continueAsGuestButtonLabelId: string;\n  requiresMarketingConsent: boolean;\n  defaultShouldSubscribe: boolean;\n  email?: string;\n  isLoading: boolean;\n  privacyPolicyUrl?: string;\n  isExpressPrivacyPolicy: boolean;\n  isFloatingLabelEnabled?: boolean;\n  shouldShowEmailWatermark: boolean;\n  onChangeEmail(email: string): void;\n  onContinueAsGuest(data: GuestFormValues): void;\n  onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n  email: string;\n  shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n  GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n  //   canSubscribe,\n  //   requiresMarketingConsent,\n  checkoutButtons,\n  continueAsGuestButtonLabelId,\n  isLoading,\n  onChangeEmail,\n  onShowLogin,\n  privacyPolicyUrl,\n  isExpressPrivacyPolicy,\n  isFloatingLabelEnabled,\n  // shouldShowEmailWatermark,\n}) => {\n  //   const renderField = useCallback(\n  //     (fieldProps: FieldProps<boolean>) => (\n  //       <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n  //     ),\n  //     [requiresMarketingConsent],\n  //   );\n\n  return (\n    <Form className=\"checkout-form\" id=\"checkout-customer-guest\" testId=\"checkout-customer-guest\">\n      <Fieldset\n        legend={\n          <Legend hidden>\n            <TranslatedString id=\"customer.guest_customer_text\" />\n          </Legend>\n        }\n      >\n        <div className=\"customerEmail-container\">\n          <div className=\"customerEmail-body\">\n            <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n          </div>\n\n          {!isLoading && (\n            <p className=\"guest-customer-login\">\n              <a\n                data-test=\"customer-continue-button\"\n                id=\"checkout-customer-login\"\n                onClick={onShowLogin}\n                role=\"button\"\n                tabIndex={0}\n              >\n                <TranslatedString id=\"customer.login_action\" />\n              </a>\n            </p>\n          )}\n\n          <div\n            className={classNames('form-actions customerEmail-action', {\n              'customerEmail-floating--enabled': isFloatingLabelEnabled,\n            })}\n          >\n            <Button\n              className=\"customerEmail-button\"\n              id=\"checkout-customer-continue\"\n              isLoading={isLoading}\n              testId=\"customer-continue-as-guest-button\"\n              type=\"submit\"\n              variant={ButtonVariant.Primary}\n            >\n              <TranslatedString id={continueAsGuestButtonLabelId} />\n            </Button>\n          </div>\n        </div>\n        {privacyPolicyUrl && (\n          <PrivacyPolicyField\n            isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n            url={privacyPolicyUrl}\n          />\n        )}\n        {checkoutButtons}\n      </Fieldset>\n    </Form>\n  );\n};\n\nexport default withLanguage(\n  withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n    mapPropsToValues: ({\n      email = '',\n      defaultShouldSubscribe = false,\n      requiresMarketingConsent,\n    }) => ({\n      email,\n      shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n      privacyPolicy: false,\n    }),\n    handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n      onContinueAsGuest(values);\n    },\n    validationSchema: ({\n      language,\n      privacyPolicyUrl,\n      isExpressPrivacyPolicy,\n    }: GuestFormProps & WithLanguageProps) => {\n      const email = string()\n        .email(language.translate('customer.email_invalid_error'))\n        .max(256)\n        .required(language.translate('customer.email_required_error'));\n\n      const baseSchema = object({ email });\n\n      if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n        return baseSchema.concat(\n          getPrivacyPolicyValidationSchema({\n            isRequired: !!privacyPolicyUrl,\n            language,\n          }),\n        );\n      }\n\n      return baseSchema;\n    },\n  })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n  TranslatedHtml,\n  TranslatedLink,\n  TranslatedString,\n  withLanguage,\n  WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\nimport './LoginForm.scss';\n\nexport interface LoginFormProps {\n  canCancel?: boolean;\n  continueAsGuestButtonLabelId: string;\n  email?: string;\n  forgotPasswordUrl: string;\n  isSignInEmailEnabled?: boolean;\n  isSendingSignInEmail?: boolean;\n  isSigningIn?: boolean;\n  isExecutingPaymentMethodCheckout?: boolean;\n  signInError?: Error;\n  signInEmailError?: Error;\n  viewType?: Omit<CustomerViewType, 'guest'>;\n  passwordlessLogin?: boolean;\n  shouldShowCreateAccountLink?: boolean;\n  isFloatingLabelEnabled?: boolean;\n  onCancel?(): void;\n  onCreateAccount?(): void;\n  onChangeEmail?(email: string): void;\n  onSignIn(data: LoginFormValues): void;\n  onSendLoginEmail?(): void;\n  onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst LoginForm: FunctionComponent<\n  LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n  canCancel,\n  continueAsGuestButtonLabelId,\n  forgotPasswordUrl,\n  email,\n  isSignInEmailEnabled,\n  isSigningIn,\n  isExecutingPaymentMethodCheckout,\n  language,\n  onCancel = noop,\n  onChangeEmail,\n  onContinueAsGuest,\n  onCreateAccount = noop,\n  onSendLoginEmail = noop,\n  signInError,\n  shouldShowCreateAccountLink,\n  isFloatingLabelEnabled,\n  viewType = CustomerViewType.Login,\n}) => {\n  const changeEmailLink = useCallback(() => {\n    if (!email) {\n      return null;\n    }\n\n    return (\n      <p className=\"optimizedCheckout-contentSecondary\">\n        <TranslatedLink\n          data={{ email }}\n          id=\"customer.guest_could_login_change_email\"\n          onClick={onCancel}\n          testId=\"change-email\"\n        />\n      </p>\n    );\n  }, [email, onCancel]);\n\n  return (\n    <Form\n      className=\"checkout-form checkout-customer-login-form\"\n      id=\"checkout-customer-returning\"\n      testId=\"checkout-customer-returning\"\n    >\n      <Fieldset\n        legend={\n          <Legend hidden>\n            <TranslatedString id=\"customer.returning_customer_text\" />\n          </Legend>\n        }\n      >\n        {signInError && (\n          <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n            {mapErrorMessage(signInError, (key) => language.translate(key))}\n          </Alert>\n        )}\n\n        {viewType === CustomerViewType.SuggestedLogin && (\n          <Alert type={AlertType.Info}>\n            <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n          </Alert>\n        )}\n\n        {viewType === CustomerViewType.CancellableEnforcedLogin && (\n          <Alert type={AlertType.Info}>\n            <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n          </Alert>\n        )}\n\n        {viewType === CustomerViewType.EnforcedLogin && (\n          <Alert type={AlertType.Error}>\n            <TranslatedLink id=\"customer.guest_temporary_disabled\" onClick={onCreateAccount} />\n          </Alert>\n        )}\n\n        {(viewType === CustomerViewType.Login || viewType === CustomerViewType.EnforcedLogin) && (\n          <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n        )}\n\n        <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n        <p className=\"form-legend-container\">\n          <span>\n            {isSignInEmailEnabled && (\n              <div>\n                <TranslatedLink\n                  id=\"login_email.link\"\n                  onClick={onSendLoginEmail}\n                  testId=\"customer-signin-link\"\n                />\n              </div>\n            )}\n            {!isSignInEmailEnabled && (\n              <a\n                data-test=\"forgot-password-link\"\n                href={forgotPasswordUrl}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <TranslatedString id=\"customer.forgot_password_action\" />\n              </a>\n            )}\n          </span>\n          {viewType === CustomerViewType.Login && shouldShowCreateAccountLink && (\n            <span>\n              <TranslatedLink\n                id=\"customer.create_account_to_continue_text\"\n                onClick={onCreateAccount}\n              />\n            </span>\n          )}\n        </p>\n\n        <div className=\"form-actions\">\n          <Button\n            disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n            id=\"checkout-customer-continue\"\n            isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n            testId=\"customer-continue-button\"\n            type=\"submit\"\n            variant={ButtonVariant.Primary}\n          >\n            <TranslatedString id=\"customer.sign_in_action\" />\n          </Button>\n\n          {viewType === CustomerViewType.SuggestedLogin && (\n            <a\n              className=\"button optimizedCheckout-buttonSecondary\"\n              data-test=\"customer-guest-continue\"\n              href=\"#\"\n              id=\"checkout-guest-continue\"\n              onClick={preventDefault(onContinueAsGuest)}\n            >\n              <TranslatedString id={continueAsGuestButtonLabelId} />\n            </a>\n          )}\n\n          {canCancel &&\n            viewType !== CustomerViewType.EnforcedLogin &&\n            viewType !== CustomerViewType.SuggestedLogin && (\n              <a\n                className=\"button optimizedCheckout-buttonSecondary\"\n                data-test=\"customer-cancel-button\"\n                href=\"#\"\n                id=\"checkout-customer-cancel\"\n                onClick={preventDefault(onCancel)}\n              >\n                <TranslatedString\n                  id={\n                    viewType === CustomerViewType.CancellableEnforcedLogin\n                      ? 'login_email.use_another_email'\n                      : 'common.cancel_action'\n                  }\n                />\n              </a>\n            )}\n        </div>\n\n        {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n      </Fieldset>\n    </Form>\n  );\n};\n\nexport default withLanguage(\n  withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n    mapPropsToValues: ({ email = '' }) => ({\n      email,\n      password: '',\n    }),\n    handleSubmit: (values, { props: { onSignIn } }) => {\n      onSignIn(values);\n    },\n    validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n      getEmailValidationSchema({ language }).concat(\n        object({\n          password: string().required(language.translate('customer.password_required_error')),\n        }),\n      ),\n  })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n  CheckoutPaymentMethodExecutedOptions,\n  CheckoutSelectors,\n  CustomerAccountRequestBody,\n  CustomerCredentials,\n  CustomerInitializeOptions,\n  CustomerRequestOptions,\n  ExecutePaymentMethodCheckoutOptions,\n  FormField,\n  GuestCredentials,\n  SignInEmail,\n  StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n  viewType: CustomerViewType;\n  step: CheckoutStepStatus;\n  isEmbedded?: boolean;\n  isSubscribed: boolean;\n  isWalletButtonsOnTop: boolean;\n  checkEmbeddedSupport?(methodIds: string[]): void;\n  onChangeViewType?(viewType: CustomerViewType): void;\n  onAccountCreated?(): void;\n  onContinueAsGuest?(): void;\n  onContinueAsGuestError?(error: Error): void;\n  onReady?(): void;\n  onSubscribeToNewsletter(subscribe: boolean): void;\n  onSignIn?(): void;\n  onSignInError?(error: Error): void;\n  onUnhandledError?(error: Error): void;\n  onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n  canSubscribe: boolean;\n  customerAccountFields: FormField[];\n  checkoutButtonIds: string[];\n  defaultShouldSubscribe: boolean;\n  email?: string;\n  firstName?: string;\n  fixNewsletterCheckboxExperimentEnabled: boolean;\n  forgotPasswordUrl: string;\n  isContinuingAsGuest: boolean;\n  isCreatingAccount: boolean;\n  isExecutingPaymentMethodCheckout: boolean;\n  isGuestEnabled: boolean;\n  hasBillingId: boolean;\n  isInitializing: boolean;\n  isSendingSignInEmail: boolean;\n  isSignInEmailEnabled: boolean;\n  isSigningIn: boolean;\n  privacyPolicyUrl?: string;\n  providerWithCustomCheckout?: string;\n  requiresMarketingConsent: boolean;\n  signInEmail?: SignInEmail;\n  signInEmailError?: Error;\n  isAccountCreationEnabled: boolean;\n  isPaymentDataRequired: boolean;\n  createAccountError?: Error;\n  signInError?: Error;\n  isFloatingLabelEnabled?: boolean;\n  isExpressPrivacyPolicy: boolean;\n  clearError(error: Error): Promise<CheckoutSelectors>;\n  continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n  deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n  executePaymentMethodCheckout(\n    options: ExecutePaymentMethodCheckoutOptions,\n  ): Promise<CheckoutSelectors>;\n  initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n  sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n  signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n  createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n  shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n  isEmailLoginFormOpen: boolean;\n  isReady: boolean;\n  hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<\n  CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps,\n  CustomerState\n> {\n  state: CustomerState = {\n    isEmailLoginFormOpen: false,\n    isReady: false,\n    hasRequestedLoginEmail: false,\n  };\n\n  private draftEmail?: string;\n\n  async componentDidMount(): Promise<void> {\n    const {\n      initializeCustomer,\n      email,\n      onReady = noop,\n      onUnhandledError = noop,\n      providerWithCustomCheckout,\n    } = this.props;\n\n    this.draftEmail = email;\n\n    try {\n      if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n        await initializeCustomer({ methodId: providerWithCustomCheckout });\n      }\n    } catch (error) {\n      onUnhandledError(error);\n    }\n\n    this.setState({ isReady: true });\n\n    onReady();\n  }\n\n  async componentWillUnmount(): Promise<void> {\n    const {\n      deinitializeCustomer = noop,\n      providerWithCustomCheckout,\n      onUnhandledError = noop,\n    } = this.props;\n\n    try {\n      await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n    } catch (error) {\n      onUnhandledError(error);\n    }\n  }\n\n  render(): ReactNode {\n    const { viewType } = this.props;\n    const { isEmailLoginFormOpen, isReady } = this.state;\n    const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n    const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n    const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n    return (\n      <CustomerSkeleton isLoading={!isReady}>\n        {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n        {shouldRenderLoginForm && this.renderLoginForm()}\n        {shouldRenderGuestForm && this.renderGuestForm()}\n        {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n      </CustomerSkeleton>\n    );\n  }\n\n  private renderGuestForm(): ReactNode {\n    const {\n      canSubscribe,\n      checkEmbeddedSupport,\n      checkoutButtonIds,\n      deinitializeCustomer,\n      email,\n      initializeCustomer,\n      isContinuingAsGuest = false,\n      isExecutingPaymentMethodCheckout = false,\n      isInitializing = false,\n      isSubscribed,\n      isWalletButtonsOnTop,\n      privacyPolicyUrl,\n      requiresMarketingConsent,\n      onUnhandledError = noop,\n      onWalletButtonClick = noop,\n      step,\n      isFloatingLabelEnabled,\n      isExpressPrivacyPolicy,\n      isPaymentDataRequired,\n      shouldRenderStripeForm,\n      providerWithCustomCheckout,\n    } = this.props;\n\n    const checkoutButtons =\n      isWalletButtonsOnTop || !isPaymentDataRequired ? null : (\n        <CheckoutButtonList\n          checkEmbeddedSupport={checkEmbeddedSupport}\n          deinitialize={deinitializeCustomer}\n          initialize={initializeCustomer}\n          isInitializing={isInitializing}\n          methodIds={checkoutButtonIds}\n          onClick={onWalletButtonClick}\n          onError={onUnhandledError}\n        />\n      );\n\n    const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n    return shouldRenderStripeForm ? (\n      <StripeGuestForm\n        canSubscribe={canSubscribe}\n        checkoutButtons={checkoutButtons}\n        continueAsGuestButtonLabelId=\"customer.continue\"\n        defaultShouldSubscribe={isSubscribed}\n        deinitialize={deinitializeCustomer}\n        email={this.draftEmail || email}\n        initialize={initializeCustomer}\n        isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n        isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n        onChangeEmail={this.handleChangeEmail}\n        onContinueAsGuest={this.handleContinueAsGuest}\n        onShowLogin={this.handleShowLogin}\n        privacyPolicyUrl={privacyPolicyUrl}\n        requiresMarketingConsent={requiresMarketingConsent}\n        step={step}\n      />\n    ) : (\n      <GuestForm\n        canSubscribe={canSubscribe}\n        checkoutButtons={checkoutButtons}\n        continueAsGuestButtonLabelId=\"customer.continue\"\n        defaultShouldSubscribe={isSubscribed}\n        email={this.draftEmail || email}\n        isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n        isFloatingLabelEnabled={isFloatingLabelEnabled}\n        isLoading={isLoadingGuestForm}\n        onChangeEmail={this.handleChangeEmail}\n        onContinueAsGuest={this.handleContinueAsGuest}\n        onShowLogin={this.handleShowLogin}\n        privacyPolicyUrl={privacyPolicyUrl}\n        requiresMarketingConsent={requiresMarketingConsent}\n        shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n      />\n    );\n  }\n\n  private renderEmailLoginLinkForm(): ReactNode {\n    const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n    const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n      this.props;\n\n    return (\n      <EmailLoginForm\n        email={this.draftEmail}\n        emailHasBeenRequested={hasRequestedLoginEmail}\n        isFloatingLabelEnabled={isFloatingLabelEnabled}\n        isOpen={isEmailLoginFormOpen}\n        isSendingEmail={isSendingSignInEmail}\n        onRequestClose={this.closeEmailLoginFormForm}\n        onSendLoginEmail={this.handleSendLoginEmail}\n        sentEmail={signInEmail}\n        sentEmailError={signInEmailError}\n      />\n    );\n  }\n\n  private closeEmailLoginFormForm: () => void = () => {\n    this.setState({\n      isEmailLoginFormOpen: false,\n      hasRequestedLoginEmail: false,\n    });\n  };\n\n  private renderCreateAccountForm(): ReactNode {\n    const {\n      customerAccountFields,\n      isExecutingPaymentMethodCheckout,\n      isCreatingAccount,\n      createAccountError,\n      requiresMarketingConsent,\n      isFloatingLabelEnabled,\n      defaultShouldSubscribe,\n      fixNewsletterCheckboxExperimentEnabled,\n    } = this.props;\n\n    return (\n      <CreateAccountForm\n        createAccountError={createAccountError}\n        defaultShouldSubscribe={defaultShouldSubscribe}\n        fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n        formFields={customerAccountFields}\n        isCreatingAccount={isCreatingAccount}\n        isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n        isFloatingLabelEnabled={isFloatingLabelEnabled}\n        onCancel={this.handleCancelCreateAccount}\n        onSubmit={this.handleCreateAccount}\n        requiresMarketingConsent={requiresMarketingConsent}\n      />\n    );\n  }\n\n  private renderLoginForm(): ReactNode {\n    const {\n      isEmbedded,\n      email,\n      // forgotPasswordUrl,\n      isSignInEmailEnabled,\n      isGuestEnabled,\n      isSendingSignInEmail,\n      isSigningIn,\n      isExecutingPaymentMethodCheckout,\n      isAccountCreationEnabled,\n      providerWithCustomCheckout,\n      signInError,\n      isFloatingLabelEnabled,\n      viewType,\n    } = this.props;\n\n    return (\n      <LoginForm\n        canCancel={isGuestEnabled}\n        continueAsGuestButtonLabelId={\n          providerWithCustomCheckout ? 'customer.continue' : 'customer.continue_as_guest_action'\n        }\n        email={this.draftEmail || email}\n        // forgotPasswordUrl={forgotPasswordUrl}\n        forgotPasswordUrl=\"https://www.lucd.art/auth/forgot-password\"\n        isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n        isFloatingLabelEnabled={isFloatingLabelEnabled}\n        isSendingSignInEmail={isSendingSignInEmail}\n        isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n        isSigningIn={isSigningIn}\n        onCancel={this.handleCancelSignIn}\n        onChangeEmail={this.handleChangeEmail}\n        onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n        onCreateAccount={this.showCreateAccount}\n        onSendLoginEmail={this.handleEmailLoginClicked}\n        onSignIn={this.handleSignIn}\n        shouldShowCreateAccountLink={isAccountCreationEnabled}\n        signInError={signInError}\n        viewType={viewType}\n      />\n    );\n  }\n\n  private handleEmailLoginClicked: () => void = async () => {\n    const { viewType } = this.props;\n\n    try {\n      if (viewType !== CustomerViewType.Login && this.draftEmail) {\n        await this.handleSendLoginEmail({ email: this.draftEmail });\n      }\n    } finally {\n      this.setState({\n        isEmailLoginFormOpen: true,\n      });\n    }\n  };\n\n  private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n    values,\n  ) => {\n    const { sendLoginEmail } = this.props;\n\n    try {\n      await sendLoginEmail(values);\n    } finally {\n      this.setState({\n        hasRequestedLoginEmail: true,\n      });\n    }\n  };\n\n  private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n    formValues,\n  ) => {\n    const {\n      canSubscribe,\n      continueAsGuest,\n      hasBillingId,\n      defaultShouldSubscribe,\n      onChangeViewType = noop,\n      onContinueAsGuest = noop,\n      onContinueAsGuestError = noop,\n      onSubscribeToNewsletter,\n    } = this.props;\n\n    const email = formValues.email.trim();\n    const updateSubscriptionWhenUnchecked =\n      hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n    try {\n      const { data } = await continueAsGuest({\n        email,\n        acceptsMarketingNewsletter:\n          canSubscribe && formValues.shouldSubscribe ? true : updateSubscriptionWhenUnchecked,\n        acceptsAbandonedCartEmails: formValues.shouldSubscribe\n          ? true\n          : updateSubscriptionWhenUnchecked,\n      });\n\n      onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n      SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n      const customer = data.getCustomer();\n\n      const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n      if (\n        customer &&\n        customer.shouldEncourageSignIn &&\n        customer.isGuest &&\n        !paymentProviderCustomer?.stripeLinkAuthenticationState\n      ) {\n        return onChangeViewType(CustomerViewType.SuggestedLogin);\n      }\n\n      await this.executePaymentMethodCheckoutOrContinue();\n\n      this.draftEmail = undefined;\n    } catch (error) {\n      if (\n        isErrorWithType(error) &&\n        (error.type === 'update_subscriptions' || error.type === 'payment_method_client_invalid')\n      ) {\n        this.draftEmail = undefined;\n\n        onContinueAsGuest();\n      }\n\n      if (isErrorWithType(error) && error.status === 429) {\n        return onChangeViewType(CustomerViewType.EnforcedLogin);\n      }\n\n      if (isErrorWithType(error) && error.status === 403) {\n        return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n      }\n\n      onContinueAsGuestError(error);\n    }\n  };\n\n  private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n    credentials,\n  ) => {\n    const { signIn, onSignIn = noop, onSignInError = noop } = this.props;\n\n    try {\n      await signIn(credentials);\n\n      onSignIn();\n\n      this.draftEmail = undefined;\n    } catch (error) {\n      onSignInError(error);\n    }\n  };\n\n  private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n    const { createAccount = noop, onAccountCreated = noop } = this.props;\n\n    await createAccount(mapCreateAccountFromFormValues(values));\n\n    onAccountCreated();\n  };\n\n  private showCreateAccount: () => void = () => {\n    const { onChangeViewType = noop } = this.props;\n\n    onChangeViewType(CustomerViewType.CreateAccount);\n  };\n\n  private handleCancelCreateAccount: () => void = () => {\n    const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n    if (createAccountError) {\n      clearError(createAccountError);\n    }\n\n    onChangeViewType(CustomerViewType.Login);\n  };\n\n  private handleCancelSignIn: () => void = () => {\n    const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n    if (signInError) {\n      clearError(signInError);\n    }\n\n    onChangeViewType(CustomerViewType.Guest);\n  };\n\n  private handleChangeEmail: (email: string) => void = (email) => {\n    const { analyticsTracker } = this.props;\n\n    this.draftEmail = email;\n    analyticsTracker.customerEmailEntry(email);\n  };\n\n  private handleShowLogin: () => void = () => {\n    const { onChangeViewType = noop } = this.props;\n\n    onChangeViewType(CustomerViewType.Login);\n  };\n\n  private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n    const {\n      executePaymentMethodCheckout,\n      onContinueAsGuest = noop,\n      providerWithCustomCheckout,\n    } = this.props;\n\n    if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n      await executePaymentMethodCheckout({\n        methodId: providerWithCustomCheckout,\n        continueWithCheckoutCallback: onContinueAsGuest,\n        checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload),\n      });\n    } else {\n      onContinueAsGuest();\n    }\n  };\n\n  private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.customerPaymentMethodExecuted(payload);\n  }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n  checkoutService,\n  checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n  const {\n    data: {\n      getBillingAddress,\n      getCustomerAccountFields,\n      getCheckout,\n      getCustomer,\n      getCart,\n      getSignInEmail,\n      getConfig,\n      isPaymentDataRequired,\n    },\n    errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n    statuses: {\n      isContinuingAsGuest,\n      isExecutingPaymentMethodCheckout,\n      isInitializingCustomer,\n      isSigningIn,\n      isSendingSignInEmail,\n      isCreatingCustomerAccount,\n    },\n  } = checkoutState;\n\n  const billingAddress = getBillingAddress();\n  const checkout = getCheckout();\n  const customer = getCustomer();\n  const cart = getCart();\n  const signInEmail = getSignInEmail();\n  const config = getConfig();\n\n  if (!checkout || !config || !cart) {\n    return null;\n  }\n\n  const {\n    checkoutSettings: {\n      privacyPolicyUrl,\n      requiresMarketingConsent,\n      isSignInEmailEnabled,\n      isAccountCreationEnabled,\n      isExpressPrivacyPolicy,\n      features,\n    },\n  } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n  const providerWithCustomCheckout = getProviderWithCustomCheckout(\n    config.checkoutSettings.providerWithCustomCheckout,\n  );\n\n  const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n  return {\n    customerAccountFields: getCustomerAccountFields(),\n    canSubscribe: config.shopperConfig.showNewsletterSignup,\n    checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n    clearError: checkoutService.clearError,\n    createAccount: checkoutService.createCustomerAccount,\n    continueAsGuest: checkoutService.continueAsGuest,\n    sendLoginEmail: checkoutService.sendSignInEmail,\n    defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n    deinitializeCustomer: checkoutService.deinitializeCustomer,\n    executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n    email: billingAddress?.email || customer?.email,\n    firstName: customer?.firstName,\n    fixNewsletterCheckboxExperimentEnabled,\n    forgotPasswordUrl: config.links.forgotPasswordLink,\n    initializeCustomer: checkoutService.initializeCustomer,\n    isCreatingAccount: isCreatingCustomerAccount(),\n    createAccountError: getCreateCustomerAccountError(),\n    hasBillingId: !!billingAddress?.id,\n    isContinuingAsGuest: isContinuingAsGuest(),\n    isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n    isInitializing: isInitializingCustomer(),\n    isSignInEmailEnabled,\n    isAccountCreationEnabled,\n    isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n    isSigningIn: isSigningIn(),\n    isSendingSignInEmail: isSendingSignInEmail(),\n    signInEmail,\n    signInEmailError: getSignInEmailError(),\n    privacyPolicyUrl,\n    providerWithCustomCheckout,\n    requiresMarketingConsent,\n    signIn: checkoutService.signInCustomer,\n    signInError: getSignInError(),\n    isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n    isExpressPrivacyPolicy,\n    isPaymentDataRequired: isPaymentDataRequired(),\n    shouldRenderStripeForm:\n      providerWithCustomCheckout === PaymentMethodId.StripeUPE &&\n      shouldUseStripeLinkByMinimumAmount(cart),\n  };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","export default __webpack_public_path__ + \"static/sigin-sigup-form-side-image-95b13ad5.png\";","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport {\n  isPayPalFastlaneAddress,\n  PoweredByPayPalFastlaneLabel,\n  usePayPalFastlaneAddress,\n} from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n  consignment: Consignment;\n  cart: Cart;\n  compactView?: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n  consignment,\n  cart,\n  compactView,\n}) => {\n  const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n  const { shippingAddress: address, selectedShippingOption } = consignment;\n  const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n  return (\n    <div className=\"staticConsignment\">\n      <div className=\"address-container\">\n        <div className=\"address-title\">Shipping Address</div>\n        <div className=\"static-consignment-address-container\">\n          <StaticAddress address={address} type={AddressType.Shipping} />\n          <div className=\"static-consignment-address-change\">Change</div>\n        </div>\n      </div>\n\n      {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n      {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n      {selectedShippingOption && (\n        <div>\n          <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n            <div className=\"shippingOptionLabel\">Shipping Method</div>\n            <StaticShippingOption\n              displayAdditionalInformation={false}\n              method={selectedShippingOption}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StaticConsignment);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport LargeLoadingSpinner from './LargeLoadingSpinner';\n\nimport './LoadingNotification.scss';\n\nexport interface LoadingNotificationProps {\n  isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <div className=\"loadingNotification\">\n      <div className=\"loadingNotification-label-ss optimizedCheckout-loadingToaster\">\n        <LargeLoadingSpinner isLoading={isLoading} />\n        <div className=\"loadingNotification-label-text\">Loading...</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LoadingNotification);\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n  children: ReactNode;\n  loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n  <ErrorBoundary\n    fallback={\n      <div className=\"lazyContainer-error\">\n        <TranslatedString id=\"common.unstable_network_error\" />\n      </div>\n    }\n    filter={filterError}\n  >\n    <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n  </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n// import { TranslatedString } from '@bigcommerce/checkout/locale';\n\n// import { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\nimport './CheckoutStepHeader.scss';\n\nexport interface CheckoutStepHeaderProps {\n  heading: ReactNode;\n  isActive?: boolean;\n  isComplete?: boolean;\n  isEditable?: boolean;\n  summary?: ReactNode;\n  type: CheckoutStepType;\n  onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n  heading,\n  isActive,\n  isComplete,\n  isEditable,\n  onEdit,\n  summary,\n  type,\n}) => {\n  return (\n    <div\n      className={classNames('stepHeader checkout-summary-wrapper ', {\n        'is-readonly': !isEditable,\n        'is-clickable': isEditable && !isActive,\n      })}\n      onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n    >\n      {/** Heading of the checkout components - start */}\n      <div className=\"stepHeader-figure stepHeader-column checkout-summary-heading\">\n        <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\n        <IconCheck\n          additionalClassName={classNames('stepHeader-counter', 'optimizedCheckout-step', {\n            'stepHeader-counter--complete': isComplete,\n          })}\n        />\n      </div>\n      {/** Heading of the checkout components - end */}\n\n      <div\n        className={`checkout-summary-container summary-${\n          !isActive && isComplete ? 'is-complete' : 'is-incomplete'\n        }`}\n      >\n        {/** summary of the checkout components - start */}\n        <div\n          className={`stepHeader-body stepHeader-column optimizedCheckout-contentPrimary summary-${\n            !isActive && isComplete ? 'is-complete' : 'is-incomplete'\n          }`}\n          data-test=\"step-info\"\n        >\n          {!isActive && isComplete && summary}\n        </div>\n        {/** summary of the checkout components - end */}\n\n        {/** edit button of the checkout components - start */}\n        {/* {isEditable && !isActive && (\n          <div className=\"stepHeader-actions stepHeader-column checkout-summary-enable-edit\">\n            <div\n              aria-expanded={isActive}\n              className=\"checkout-summary-enable-edit-button\"\n              data-test=\"step-edit-button\"\n            >\n              <TranslatedString id=\"common.change_action\" />\n            </div>\n          </div>\n        )} */}\n        {/** edit button of the checkout components - end */}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n  heading?: ReactNode;\n  isActive?: boolean;\n  isBusy: boolean;\n  isComplete?: boolean;\n  isEditable?: boolean;\n  suggestion?: ReactNode;\n  summary?: ReactNode;\n  type: CheckoutStepType;\n  onExpanded?(step: CheckoutStepType): void;\n  onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n  isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n  state = {\n    isClosed: true,\n  };\n\n  private containerRef = createRef<HTMLLIElement>();\n  private contentRef = createRef<HTMLDivElement>();\n  private timeoutRef?: number;\n  private timeoutDelay?: number;\n\n  componentDidMount(): void {\n    const { isActive } = this.props;\n\n    if (isActive) {\n      this.focusStep();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n    const { isActive } = this.props;\n\n    if (isActive && isActive !== prevProps.isActive) {\n      this.focusStep();\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.timeoutRef) {\n      window.clearTimeout(this.timeoutRef);\n\n      this.timeoutRef = undefined;\n    }\n  }\n\n  render(): ReactNode {\n    const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n      this.props;\n\n    const { isClosed } = this.state;\n\n    return (\n      <li\n        className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n          [`checkout-step--${type}`]: !!type,\n        })}\n        ref={this.containerRef}\n      >\n        <div className=\"checkout-view-header\">\n          <CheckoutStepHeader\n            heading={heading}\n            isActive={isActive}\n            isComplete={isComplete}\n            isEditable={isEditable}\n            onEdit={onEdit}\n            summary={summary}\n            type={type}\n          />\n        </div>\n\n        {suggestion && isClosed && !isActive && (\n          <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n            {suggestion}\n          </div>\n        )}\n\n        {this.renderContent()}\n      </li>\n    );\n  }\n\n  private renderContent(): ReactNode {\n    const { children, isActive, isBusy } = this.props;\n\n    return (\n      <MobileView>\n        {(matched) => (\n          <CSSTransition\n            addEndListener={this.handleTransitionEnd}\n            classNames=\"checkout-view-content\"\n            enter={!matched}\n            exit={!matched}\n            in={isActive}\n            mountOnEnter\n            onExited={this.onAnimationEnd}\n            timeout={{}}\n            unmountOnExit\n          >\n            <div aria-busy={isBusy} className=\"checkout-view-content\" ref={this.contentRef}>\n              {isActive ? children : null}\n            </div>\n          </CSSTransition>\n        )}\n      </MobileView>\n    );\n  }\n\n  private focusStep(): void {\n    const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n    this.setState({ isClosed: false });\n\n    this.timeoutRef = window.setTimeout(() => {\n      const input = this.getChildInput();\n      const position = this.getScrollPosition();\n      const { type, onExpanded = noop } = this.props;\n\n      if (input) {\n        input.focus();\n      }\n\n      if (position !== undefined && !isNaN(position)) {\n        window.scrollTo(0, position);\n      }\n\n      onExpanded(type);\n\n      this.timeoutRef = undefined;\n    }, delay);\n  }\n\n  private getChildInput(): HTMLElement | undefined {\n    const container = this.containerRef.current;\n\n    if (!container) {\n      return;\n    }\n\n    const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n    return input || undefined;\n  }\n\n  private getScrollPosition(): number | undefined {\n    const container = this.getParentContainer();\n    const { isComplete } = this.props;\n\n    if (!container || window !== window.top) {\n      return;\n    }\n\n    const topOffset = isComplete ? 0 : window.innerHeight / 5;\n    const containerOffset =\n      container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n    return containerOffset - topOffset;\n  }\n\n  // For now, we need to find the parent container because `CheckoutStep`\n  // isn't the outer container yet. Once both the header and body are\n  // moved inside this component, we can remove the lookup.\n  private getParentContainer(): HTMLElement | undefined {\n    let container: HTMLElement | null = this.containerRef.current;\n\n    while (container && container.parentElement) {\n      if (container.parentElement.classList.contains('checkout-step')) {\n        return container.parentElement;\n      }\n\n      container = container.parentElement;\n    }\n\n    return this.containerRef.current ? this.containerRef.current : undefined;\n  }\n\n  private getTransitionDelay(): number {\n    if (this.timeoutDelay !== undefined) {\n      return this.timeoutDelay;\n    }\n\n    // Cache the result to avoid unnecessary reflow\n    this.timeoutDelay =\n      parseFloat(\n        this.contentRef.current\n          ? getComputedStyle(this.contentRef.current).transitionDuration\n          : '0s',\n      ) * 1000;\n\n    return this.timeoutDelay;\n  }\n\n  private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n    node.addEventListener('transitionend', ({ target }) => {\n      if (target === node) {\n        done();\n      }\n    });\n  };\n\n  private onAnimationEnd = (): void => {\n    const { isActive } = this.props;\n\n    if (!isActive) {\n      this.setState({ isClosed: true });\n    }\n  };\n}\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import {\n  Address,\n  Cart,\n  CartChangedError,\n  CheckoutParams,\n  CheckoutSelectors,\n  Consignment,\n  CustomerAccountRequestBody,\n  EmbeddedCheckoutMessenger,\n  EmbeddedCheckoutMessengerOptions,\n  // ExtensionRegion,\n  FlashMessage,\n  FormField,\n  PaymentMethod,\n  Promotion,\n  RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport {\n  // Extension,\n  ExtensionContextProps,\n  withExtension,\n} from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton, Modal } from '@bigcommerce/checkout/ui';\n\nimport { isEqualAddress } from '../address';\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport BillingSummary from '../cart/billingSummary/BillingSummary';\n// import CartSummaryWrapper from '../cart/customeCart/CartSummaryWrapper';\n// import DiscountCode from '../cart/discount-code/DiscountCode';\n// import OrderComment from '../cart/order-comment/OrderComment';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n  CheckoutButtonContainer,\n  CheckoutSuggestion,\n  Customer,\n  CustomerInfo,\n  CustomerSignOutEvent,\n  CustomerViewType,\n} from '../customer';\nimport CreateAccountForm from '../customer/CreateAccountForm';\nimport { CreateAccountFormValues } from '../customer/getCreateCustomerValidationSchema';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport mapCreateAccountFromFormValues from '../customer/mapCreateAccountFromFormValues';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport signinSigupImage from '../image/sigin-sigup-form-side-image.png';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, StaticConsignment } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { IconClose } from '../ui/icon';\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\n// import { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\n\nimport './Checkout.scss';\n\nconst Billing = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"billing\" */\n        '../billing/Billing'\n      ),\n  ),\n);\n\n// const CartSummary = lazy(() =>\n//   retry(\n//     () =>\n//       import(\n//         /* webpackChunkName: \"cart-summary\" */\n//         '../cart/CartSummary'\n//       ),\n//   ),\n// );\n\n// const CartSummaryDrawer = lazy(() =>\n//   retry(\n//     () =>\n//       import(\n//         /* webpackChunkName: \"cart-summary-drawer\" */\n//         '../cart/CartSummaryDrawer'\n//       ),\n//   ),\n// );\n\nconst CartSummaryWrapper = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"cart-summary-wrapper\" */\n        '../cart/customeCart/CartSummaryWrapper'\n      ),\n  ),\n);\n\nconst DiscountCode = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"discount-code\" */\n        '../cart/discount-code/DiscountCode'\n      ),\n  ),\n);\n\nconst OrderComment = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"order-comment\" */\n        '../cart/order-comment/OrderComment'\n      ),\n  ),\n);\n\nconst Payment = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"payment\" */\n        '../payment/Payment'\n      ),\n  ),\n);\n\nconst Shipping = lazy(() =>\n  retry(\n    () =>\n      import(\n        /* webpackChunkName: \"shipping\" */\n        '../shipping/Shipping'\n      ),\n  ),\n);\n\nexport interface CheckoutProps {\n  checkoutId: string;\n  containerId: string;\n  embeddedStylesheet: EmbeddedCheckoutStylesheet;\n  embeddedSupport: CheckoutSupport;\n  errorLogger: ErrorLogger;\n  createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n  activeStepType?: CheckoutStepType;\n  isBillingSameAsShipping: boolean;\n  customerViewType?: CustomerViewType;\n  defaultStepType?: CheckoutStepType;\n  error?: Error;\n  flashMessages?: FlashMessage[];\n  isMultiShippingMode: boolean;\n  isCartEmpty: boolean;\n  isRedirecting: boolean;\n  hasSelectedShippingOptions: boolean;\n  isSubscribed: boolean;\n  buttonConfigs: PaymentMethod[];\n  enableSignUp: boolean;\n}\n\nexport interface WithCheckoutProps {\n  billingAddress?: Address;\n  cart?: Cart;\n  consignments?: Consignment[];\n  error?: Error;\n  hasCartChanged: boolean;\n  flashMessages?: FlashMessage[];\n  isGuestEnabled: boolean;\n  isLoadingCheckout: boolean;\n  isPending: boolean;\n  isPriceHiddenFromGuests: boolean;\n  isShowingWalletButtonsOnTop: boolean;\n  loginUrl: string;\n  cartUrl: string;\n  createAccountUrl: string;\n  promotions?: Promotion[];\n  steps: CheckoutStepStatus[];\n  clearError(error?: Error): void;\n  loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n  loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n  subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n  signUp: any;\n  customerAccountFields: FormField[];\n  createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n  onAccountCreated?(): void;\n  customerCreateError?: string;\n}\n\nclass Checkout extends Component<\n  CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n  CheckoutState\n> {\n  state: CheckoutState = {\n    isBillingSameAsShipping: true,\n    isCartEmpty: false,\n    isRedirecting: false,\n    isMultiShippingMode: false,\n    hasSelectedShippingOptions: false,\n    isSubscribed: false,\n    buttonConfigs: [],\n    enableSignUp: false,\n  };\n\n  private embeddedMessenger?: EmbeddedCheckoutMessenger;\n  private unsubscribeFromConsignments?: () => void;\n\n  componentWillUnmount(): void {\n    if (this.unsubscribeFromConsignments) {\n      this.unsubscribeFromConsignments();\n      this.unsubscribeFromConsignments = undefined;\n    }\n\n    window.removeEventListener('beforeunload', this.handleBeforeExit);\n    this.handleBeforeExit();\n  }\n\n  async componentDidMount(): Promise<void> {\n    const {\n      analyticsTracker,\n      checkoutId,\n      containerId,\n      createEmbeddedMessenger,\n      embeddedStylesheet,\n      extensionService,\n      loadCheckout,\n      loadPaymentMethodByIds,\n      subscribeToConsignments,\n    } = this.props;\n\n    try {\n      const [{ data }] = await Promise.all([\n        loadCheckout(checkoutId, {\n          params: {\n            include: [\n              'cart.lineItems.physicalItems.categoryNames',\n              'cart.lineItems.digitalItems.categoryNames',\n            ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n          },\n        }),\n        extensionService.loadExtensions(),\n      ]);\n\n      const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n      const supportedProviders = getSupportedMethodIds(providers);\n\n      if (providers.length > 0) {\n        const configs = await loadPaymentMethodByIds(supportedProviders);\n\n        this.setState({\n          buttonConfigs: configs.data.getPaymentMethods() || [],\n        });\n      }\n\n      extensionService.preloadExtensions();\n\n      const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n      const errorFlashMessages = data.getFlashMessages('error') || [];\n\n      if (errorFlashMessages.length) {\n        const { language } = this.props;\n\n        this.setState({\n          error: new CustomError({\n            title: errorFlashMessages[0].title || language.translate('common.error_heading'),\n            message: errorFlashMessages[0].message,\n            data: {},\n            name: 'default',\n          }),\n        });\n      }\n\n      const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n      this.unsubscribeFromConsignments = subscribeToConsignments(this.handleConsignmentsUpdated);\n      this.embeddedMessenger = messenger;\n      messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n      messenger.postFrameLoaded({ contentId: containerId });\n      messenger.postLoaded();\n\n      analyticsTracker.checkoutBegin();\n\n      const consignments = data.getConsignments();\n      const cart = data.getCart();\n\n      const hasMultiShippingEnabled = data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n      const checkoutBillingSameAsShippingEnabled =\n        data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n      const defaultNewsletterSignupOption =\n        data.getConfig()?.shopperConfig.defaultNewsletterSignup ?? false;\n      const isMultiShippingMode =\n        !!cart &&\n        !!consignments &&\n        hasMultiShippingEnabled &&\n        isUsingMultiShipping(consignments, cart.lineItems);\n\n      this.setState({\n        isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n        isSubscribed: defaultNewsletterSignupOption,\n      });\n\n      if (isMultiShippingMode) {\n        this.setState({ isMultiShippingMode }, this.handleReady);\n      } else {\n        this.handleReady();\n      }\n\n      window.addEventListener('beforeunload', this.handleBeforeExit);\n    } catch (error) {\n      if (error instanceof Error) {\n        this.handleUnhandledError(error);\n      }\n    }\n  }\n\n  private handleCloseSignUpForm = () => {\n    this.setState({ enableSignUp: false });\n  };\n\n  render(): ReactNode {\n    const { error } = this.state;\n    let errorModal = null;\n\n    if (error) {\n      if (isCustomError(error)) {\n        errorModal = (\n          <ErrorModal error={error} onClose={this.handleCloseErrorModal} title={error.title} />\n        );\n      } else {\n        errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n      }\n    }\n\n    return (\n      <div\n        className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })}\n        data-test=\"checkout-page-container\"\n        id=\"checkout-page-container\"\n      >\n        <div className=\"layout optimizedCheckout-contentPrimary\">{this.renderContent()}</div>\n        {errorModal}\n      </div>\n    );\n  }\n\n  private handleSignUpUserSubmit: (values: CreateAccountFormValues) => void = async (values) => {\n    const { createAccount } = this.props;\n\n    await createAccount(mapCreateAccountFromFormValues(values));\n    this.navigateToNextIncompleteStep();\n    this.setState({ enableSignUp: false });\n  };\n\n  private renderContent(): ReactNode {\n    const {\n      isPending,\n      loginUrl,\n      promotions = [],\n      steps,\n      isShowingWalletButtonsOnTop,\n      extensionState,\n      customerAccountFields,\n      customerCreateError,\n    } = this.props;\n\n    const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n    if (isCartEmpty) {\n      return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n    }\n\n    const isPaymentStepActive = activeStepType\n      ? activeStepType === CheckoutStepType.Payment\n      : defaultStepType === CheckoutStepType.Payment;\n\n    return (\n      <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n        <div\n          className=\"checkout-page-container\"\n          style={{ display: 'flex', flexDirection: 'row', height: '100%' }}\n        >\n          <div className=\"layout-main\">\n            <LoadingNotification\n              isLoading={\n                (!isShowingWalletButtonsOnTop && isPending) ||\n                extensionState.isShowingLoadingIndicator\n              }\n            />\n\n            <PromotionBannerList promotions={promotions} />\n\n            {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n              <CheckoutButtonContainer\n                checkEmbeddedSupport={this.checkEmbeddedSupport}\n                isPaymentStepActive={isPaymentStepActive}\n                onUnhandledError={this.handleUnhandledError}\n                onWalletButtonClick={this.handleWalletButtonClick}\n              />\n            )}\n\n            <ol className=\"checkout-steps\">\n              {steps\n                .filter((step) => step.isRequired)\n                .map((step) =>\n                  this.renderStep({\n                    ...step,\n                    isActive: activeStepType\n                      ? activeStepType === step.type\n                      : defaultStepType === step.type,\n                    isBusy: isPending,\n                  }),\n                )}\n            </ol>\n          </div>\n\n          {this.renderCartSummary()}\n        </div>\n\n        <Modal\n          additionalBodyClassName=\"sign-up-modal-body\"\n          additionalHeaderClassName=\"sign-up-modal-header\"\n          additionalModalClassName=\"sign-up-modal\"\n          closeButtonLabel={<TranslatedString id=\"common.close_action\" />}\n          id=\"sign-up-modal\"\n          isOpen={this.state.enableSignUp}\n          onRequestClose={this.handleCloseSignUpForm}\n          shouldShowCloseButton={false}\n        >\n          <div className=\"sign-up-modal-body-wrapper\">\n            <div className=\"sign-up-modal-form-wrapper\">\n              <div className=\"sign-up-modal-title-wrapper\">\n                <div className=\"sign-up-modal-title\">\n                  Discover Your Preferred Gemstone Selection Here\n                </div>\n                <div className=\"sign-up-modal-description\">Sign up</div>\n              </div>\n              <CreateAccountForm\n                defaultShouldSubscribe={false}\n                errorInSignInEmail={\n                  !!customerCreateError && customerCreateError === 'Could not create customer'\n                }\n                fixNewsletterCheckboxExperimentEnabled={false}\n                formFields={customerAccountFields}\n                isFloatingLabelEnabled={true}\n                onCancel={this.handleCloseSignUpForm}\n                onSubmit={this.handleSignUpUserSubmit}\n                requiresMarketingConsent={false}\n              />\n              {/* <div className=\"sign-up-modal-error\">\n                {!!customerCreateError &&\n                  (customerCreateError === 'Could not create customer'\n                    ? 'User allready exist'\n                    : customerCreateError)}\n              </div> */}\n            </div>\n            <div className=\"sign-up-modal-image-wrapper\">\n              <button className=\"sign-up-modal-close\" onClick={this.handleCloseSignUpForm}>\n                <IconClose />\n              </button>\n              <img className=\"sign-up-modal-image\" src={signinSigupImage} />\n            </div>\n          </div>\n        </Modal>\n      </LoadingOverlay>\n    );\n  }\n\n  private renderStep(step: CheckoutStepStatus): ReactNode {\n    switch (step.type) {\n      case CheckoutStepType.Customer:\n        return this.renderCustomerStep(step);\n\n      case CheckoutStepType.Shipping:\n        return this.renderShippingStep(step);\n\n      case CheckoutStepType.Billing:\n        return this.renderBillingStep(step);\n\n      case CheckoutStepType.Payment:\n        return this.renderPaymentStep(step);\n\n      // case CheckoutStepType.shippingOption:\n      //   return this.renderShippingOptionStep(step);\n\n      default:\n        return null;\n    }\n  }\n\n  private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n    const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n    const {\n      customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n      isSubscribed,\n    } = this.state;\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"customer.customer_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n        suggestion={<CheckoutSuggestion />}\n        summary={<CustomerInfo onSignOut={this.handleSignOut} onSignOutError={this.handleError} />}\n      >\n        <Customer\n          checkEmbeddedSupport={this.checkEmbeddedSupport}\n          isEmbedded={isEmbedded()}\n          isSubscribed={isSubscribed}\n          isWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n          onAccountCreated={this.navigateToNextIncompleteStep}\n          onChangeViewType={this.setCustomerViewType}\n          onContinueAsGuest={this.navigateToNextIncompleteStep}\n          onContinueAsGuestError={this.handleError}\n          onReady={this.handleReady}\n          onSignIn={this.navigateToNextIncompleteStep}\n          onSignInError={this.handleError}\n          onSubscribeToNewsletter={this.handleNewsletterSubscription}\n          onUnhandledError={this.handleUnhandledError}\n          onWalletButtonClick={this.handleWalletButtonClick}\n          step={step}\n          viewType={customerViewType}\n        />\n      </CheckoutStep>\n    );\n  }\n\n  private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n    const { hasCartChanged, cart, consignments = [] } = this.props;\n\n    const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n    if (!cart) {\n      return;\n    }\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n        summary={consignments.map((consignment) => (\n          <div className=\"staticConsignmentContainer\" key={consignment.id}>\n            <StaticConsignment\n              cart={cart}\n              compactView={consignments.length < 2}\n              consignment={consignment}\n            />\n          </div>\n        ))}\n      >\n        <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n          <Shipping\n            cartHasChanged={hasCartChanged}\n            isBillingSameAsShipping={isBillingSameAsShipping}\n            isMultiShippingMode={isMultiShippingMode}\n            navigateNextStep={this.handleShippingNextStep}\n            onCreateAccount={this.handleShippingCreateAccount}\n            onReady={this.handleReady}\n            onSignIn={this.handleShippingSignIn}\n            onToggleMultiShipping={this.handleToggleMultiShipping}\n            onUnhandledError={this.handleUnhandledError}\n            step={step}\n          />\n        </LazyContainer>\n      </CheckoutStep>\n    );\n  }\n\n  private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n    const { billingAddress, consignments } = this.props;\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"billing.billing_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n        summary={\n          billingAddress && (\n            <StaticBillingAddress\n              address={billingAddress}\n              showSameAsShippingLable={isEqualAddress(\n                billingAddress,\n                (consignments ?? [])[0]?.shippingAddress,\n              )}\n            />\n          )\n        }\n      >\n        <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n          <Billing\n            navigateNextStep={this.navigateToNextIncompleteStep}\n            onReady={this.handleReady}\n            onUnhandledError={this.handleUnhandledError}\n          />\n        </LazyContainer>\n      </CheckoutStep>\n    );\n  }\n\n  private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n    const { consignments, cart, errorLogger } = this.props;\n\n    return (\n      <CheckoutStep\n        {...step}\n        heading={<TranslatedString id=\"payment.payment_heading\" />}\n        key={step.type}\n        onEdit={this.handleEditStep}\n        onExpanded={this.handleExpanded}\n      >\n        <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n          <Payment\n            checkEmbeddedSupport={this.checkEmbeddedSupport}\n            errorLogger={errorLogger}\n            formId=\"checkout-payment-form\"\n            isEmbedded={isEmbedded()}\n            isUsingMultiShipping={\n              cart && consignments ? isUsingMultiShipping(consignments, cart.lineItems) : false\n            }\n            onCartChangedError={this.handleCartChangedError}\n            onFinalize={this.navigateToOrderConfirmation}\n            onReady={this.handleReady}\n            onSubmit={this.navigateToOrderConfirmation}\n            onSubmitError={this.handleError}\n            onUnhandledError={this.handleUnhandledError}\n          />\n        </LazyContainer>\n      </CheckoutStep>\n    );\n  }\n\n  private renderCartSummary(): ReactNode {\n    const { activeStepType, defaultStepType } = this.state;\n\n    const isPaymentStepActive = activeStepType\n      ? activeStepType === CheckoutStepType.Payment\n      : defaultStepType === CheckoutStepType.Payment;\n\n    return (\n      <div className=\"checkout-cart-summary\">\n        <div className=\"checkout-order-review\">\n          <div>\n            <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n              <CartSummaryWrapper />\n            </LazyContainer>\n          </div>\n        </div>\n        <div className=\"\">\n          <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n            <DiscountCode {...this.props} />\n          </LazyContainer>\n        </div>\n        <div className=\"\">\n          <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n            <OrderComment {...this.props} />\n          </LazyContainer>\n        </div>\n        <div className=\"\">\n          <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n            <BillingSummary\n              {...this.props}\n              formId=\"checkout-payment-form\"\n              isPaymentStepActive={isPaymentStepActive}\n            />\n          </LazyContainer>\n        </div>\n      </div>\n    );\n  }\n  private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n    const { clearError, error, steps } = this.props;\n    const { activeStepType } = this.state;\n    const step = find(steps, { type });\n\n    if (!step) {\n      return;\n    }\n\n    if (activeStepType === step.type) {\n      return;\n    }\n\n    if (options && options.isDefault) {\n      this.setState({ defaultStepType: step.type });\n    } else {\n      this.setState({ activeStepType: step.type });\n    }\n\n    if (error) {\n      clearError(error);\n    }\n  }\n\n  private handleToggleMultiShipping: () => void = () => {\n    const { isMultiShippingMode } = this.state;\n\n    this.setState({ isMultiShippingMode: !isMultiShippingMode });\n  };\n\n  private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (options) => {\n    const { steps, analyticsTracker } = this.props;\n    const activeStepIndex = findIndex(steps, { isActive: true });\n    const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n    if (!activeStep) {\n      return;\n    }\n\n    const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n    if (previousStep) {\n      analyticsTracker.trackStepCompleted(previousStep.type);\n    }\n\n    this.navigateToStep(activeStep.type, options);\n  };\n\n  private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n    const { steps, analyticsTracker } = this.props;\n\n    analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postComplete();\n    }\n\n    SubscribeSessionStorage.removeSubscribeStatus();\n\n    this.setState({ isRedirecting: true }, () => {\n      navigateToOrderConfirmation(orderId);\n    });\n  };\n\n  private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n    const { embeddedSupport } = this.props;\n\n    return embeddedSupport.isSupported(...methodIds);\n  };\n\n  private handleCartChangedError: (error: CartChangedError) => void = () => {\n    this.navigateToStep(CheckoutStepType.Shipping);\n  };\n\n  private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n    const {\n      hasSelectedShippingOptions: prevHasSelectedShippingOptions,\n      activeStepType,\n      defaultStepType,\n    } = this.state;\n\n    const { steps } = this.props;\n\n    const newHasSelectedShippingOptions = hasSelectedShippingOptions(data.getConsignments() || []);\n\n    const isDefaultStepPaymentOrBilling =\n      !activeStepType &&\n      (defaultStepType === CheckoutStepType.Payment ||\n        defaultStepType === CheckoutStepType.Billing);\n\n    const isShippingStepFinished =\n      findIndex(steps, { type: CheckoutStepType.Shipping }) <\n        findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n    if (\n      prevHasSelectedShippingOptions &&\n      !newHasSelectedShippingOptions &&\n      isShippingStepFinished\n    ) {\n      this.navigateToStep(CheckoutStepType.Shipping);\n      this.setState({ error: new ShippingOptionExpiredError() });\n    }\n\n    this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n  };\n\n  private handleCloseErrorModal: () => void = () => {\n    this.setState({ error: undefined });\n  };\n\n  private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.trackStepViewed(type);\n  };\n\n  private handleUnhandledError: (error: Error) => void = (error) => {\n    this.handleError(error);\n\n    // For errors that are not caught and handled by child components, we\n    // handle them here by displaying a generic error modal to the shopper.\n    this.setState({ error });\n  };\n\n  private handleError: (error: Error) => void = (error) => {\n    const { errorLogger } = this.props;\n\n    errorLogger.log(error);\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postError(error);\n    }\n  };\n\n  private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n    this.navigateToStep(type);\n  };\n\n  private handleReady: () => void = () => {\n    this.navigateToNextIncompleteStep({ isDefault: true });\n  };\n\n  private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n    this.setState({ isSubscribed: subscribed });\n  };\n\n  private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n    const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n    if (isPriceHiddenFromGuests) {\n      if (window.top) {\n        return (window.top.location.href = cartUrl);\n      }\n    }\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postSignedOut();\n    }\n\n    if (isGuestEnabled) {\n      this.setCustomerViewType(CustomerViewType.Guest);\n    }\n\n    if (isCartEmpty) {\n      this.setState({ isCartEmpty: true });\n\n      if (!isEmbedded()) {\n        if (window.top) {\n          return window.top.location.assign(loginUrl);\n        }\n      }\n    }\n\n    this.navigateToStep(CheckoutStepType.Customer);\n  };\n\n  private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n    isBillingSameAsShipping,\n  ) => {\n    this.setState({ isBillingSameAsShipping });\n\n    if (isBillingSameAsShipping) {\n      this.navigateToNextIncompleteStep();\n    } else {\n      this.navigateToStep(CheckoutStepType.Billing);\n    }\n  };\n\n  private handleShippingSignIn: () => void = () => {\n    this.setCustomerViewType(CustomerViewType.Login);\n  };\n\n  private handleShippingCreateAccount: () => void = () => {\n    this.setCustomerViewType(CustomerViewType.CreateAccount);\n  };\n\n  private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n    if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n      if (window.top) {\n        this.setState({ enableSignUp: true });\n      }\n\n      return;\n    }\n\n    this.navigateToStep(CheckoutStepType.Customer);\n    this.setState({ customerViewType });\n  };\n\n  private handleBeforeExit: () => void = () => {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.exitCheckout();\n  };\n\n  private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n    const { analyticsTracker } = this.props;\n\n    analyticsTracker.walletButtonClick(methodName);\n  };\n}\n\nexport default withExtension(\n  withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","enum CheckoutStepType {\n  Billing = 'billing',\n  Customer = 'customer',\n  Payment = 'payment',\n  Shipping = 'shipping',\n  OrderReview = 'orderReview',\n  discountCode = 'discountCode',\n  OrderNote = 'orderNote',\n  BillingSummary = 'billingSummary',\n  //   shippingOption = 'shippingOption',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n  hasSelectedShippingOptions,\n  hasUnassignedLineItems,\n  itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n  isUsingWallet: boolean,\n  hasEmail: boolean,\n  isGuest: boolean,\n  shouldUseStripeLinkByMinimumAmount: boolean,\n  providerWithCustomCheckout?: string | null,\n) => {\n  return (\n    !isUsingWallet &&\n    providerWithCustomCheckout === PaymentMethodId.StripeUPE &&\n    hasEmail &&\n    isGuest &&\n    shouldUseStripeLinkByMinimumAmount\n  );\n};\n\nconst getCustomerStepStatus = createSelector(\n  ({ data }: CheckoutSelectors) => data.getCheckout(),\n  ({ data }: CheckoutSelectors) => data.getCustomer(),\n  ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n  ({ data }: CheckoutSelectors) => data.getConfig(),\n  ({ data }: CheckoutSelectors) => data.getCart(),\n  ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n  (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n    const hasEmail = !!((customer && customer.email) || (billingAddress && billingAddress.email));\n    const isUsingWallet =\n      checkout && checkout.payments\n        ? checkout.payments.some(\n            (payment: { providerId: string }) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n          )\n        : false;\n    const isGuest = !!(customer && customer.isGuest);\n    const isComplete = hasEmail || isUsingWallet;\n    const isEditable = isComplete && !isUsingWallet && isGuest;\n    const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n      isUsingWallet,\n      hasEmail,\n      isGuest,\n      cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n      config?.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n      return {\n        type: CheckoutStepType.Customer,\n        isActive: false,\n        isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n        isEditable,\n        isRequired: true,\n      };\n    }\n\n    return {\n      type: CheckoutStepType.Customer,\n      isActive: false,\n      isComplete,\n      isEditable,\n      isRequired: true,\n    };\n  },\n);\n\nconst getBillingStepStatus = createSelector(\n  ({ data }: CheckoutSelectors) => data.getCheckout(),\n  ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n  ({ data }: CheckoutSelectors) => {\n    const billingAddress = data.getBillingAddress();\n\n    return billingAddress ? data.getBillingAddressFields(billingAddress.countryCode) : EMPTY_ARRAY;\n  },\n  (checkout, billingAddress, billingAddressFields) => {\n    const hasAddress = billingAddress\n      ? isValidAddress(billingAddress, billingAddressFields)\n      : false;\n    const isUsingWallet =\n      checkout && checkout.payments\n        ? checkout.payments.some((payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0)\n        : false;\n    const isComplete = hasAddress || isUsingWallet;\n    const isUsingAmazonPay =\n      checkout && checkout.payments\n        ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n        : false;\n\n    if (isUsingAmazonPay) {\n      const billingAddressCustomFields = billingAddressFields.filter(\n        ({ custom }: { custom: boolean }) => custom,\n      );\n      const hasCustomFields = billingAddressCustomFields.length > 0;\n      const isAmazonPayBillingStepComplete =\n        billingAddress && hasCustomFields\n          ? isValidAddress(billingAddress, billingAddressCustomFields)\n          : true;\n\n      return {\n        type: CheckoutStepType.Billing,\n        isActive: false,\n        isComplete: isAmazonPayBillingStepComplete,\n        isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n        isRequired: true,\n      };\n    }\n\n    const isUsingPaypal =\n      checkout && checkout.payments\n        ? checkout.payments.some((payment) =>\n            [\n              'braintreepaypal',\n              'braintreepaypalcredit',\n              'braintreevenmo',\n              'paypalcommerce',\n              'paypalcommercecredit',\n              'paypalcommercevenmo',\n            ].includes(payment.providerId),\n          )\n        : false;\n\n    if (isUsingPaypal) {\n      return {\n        type: CheckoutStepType.Billing,\n        isActive: false,\n        isComplete: hasAddress,\n        isEditable: hasAddress,\n        isRequired: true,\n      };\n    }\n\n    return {\n      type: CheckoutStepType.Billing,\n      isActive: false,\n      isComplete,\n      isEditable: isComplete && !isUsingWallet,\n      isRequired: true,\n    };\n  },\n);\n\nconst getShippingStepStatus = createSelector(\n  ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n  ({ data }: CheckoutSelectors) => data.getConsignments(),\n  ({ data }: CheckoutSelectors) => data.getCart(),\n  ({ data }: CheckoutSelectors) => {\n    const shippingAddress = data.getShippingAddress();\n\n    return shippingAddress\n      ? data.getShippingAddressFields(shippingAddress.countryCode)\n      : EMPTY_ARRAY;\n  },\n  ({ data }: CheckoutSelectors) => data.getConfig(),\n  (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n    const hasAddress = shippingAddress\n      ? isValidAddress(shippingAddress, shippingAddressFields)\n      : false;\n    const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n    const hasUnassignedItems =\n      cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n    const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n    const isRequired = itemsRequireShipping(cart, config);\n    const isCustomShippingSelected =\n      isExperimentEnabled(\n        config?.checkoutSettings,\n        'PROJECT-5015.manual_order.display_custom_shipping',\n      ) &&\n      hasOptions &&\n      consignments?.some(({ selectedShippingOption }) => selectedShippingOption?.type === 'custom');\n\n    return {\n      type: CheckoutStepType.Shipping,\n      isActive: false,\n      isComplete,\n      isEditable: isComplete && isRequired && !isCustomShippingSelected,\n      isRequired,\n    };\n  },\n);\n\n// const getShippingOptionsStepStatus = createSelector(\n//   ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n//   ({ data }: CheckoutSelectors) => data.getConsignments(),\n//   ({ data }: CheckoutSelectors) => data.getCart(),\n//   ({ data }: CheckoutSelectors) => {\n//     const shippingAddress = data.getShippingAddress();\n\n//     return shippingAddress\n//       ? data.getShippingAddressFields(shippingAddress.countryCode)\n//       : EMPTY_ARRAY;\n//   },\n//   ({ data }: CheckoutSelectors) => data.getConfig(),\n//   (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n//     const hasAddress = shippingAddress\n//       ? isValidAddress(shippingAddress, shippingAddressFields)\n//       : false;\n//     const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n//     const hasUnassignedItems =\n//       cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n//     const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n//     const isRequired = itemsRequireShipping(cart, config);\n//     const isCustomShippingSelected =\n//       isExperimentEnabled(\n//         config?.checkoutSettings,\n//         'PROJECT-5015.manual_order.display_custom_shipping',\n//       ) &&\n//       hasOptions &&\n//       consignments?.some(({ selectedShippingOption }) => selectedShippingOption?.type === 'custom');\n\n//     return {\n//       type: CheckoutStepType.Shipping,\n//       isActive: false,\n//       isComplete,\n//       isEditable: isComplete && isRequired && !isCustomShippingSelected,\n//       isRequired,\n//     };\n//   },\n// );\n\nconst getPaymentStepStatus = createSelector(\n  ({ data }: CheckoutSelectors) => data.getOrder(),\n  (order) => {\n    const isComplete = order ? order.isComplete : false;\n\n    return {\n      type: CheckoutStepType.Payment,\n      isActive: false,\n      isComplete,\n      isEditable: isComplete,\n      isRequired: true,\n    };\n  },\n);\n\nconst getCheckoutStepStatuses = createSelector(\n  getCustomerStepStatus,\n  getShippingStepStatus,\n  //   getShippingOptionsStepStatus,\n  getBillingStepStatus,\n  getPaymentStepStatus,\n  (\n    customerStep,\n    shippingStep,\n    // shippingOption,\n    billingStep,\n    paymentStep,\n  ) => {\n    const steps = compact([\n      customerStep,\n      shippingStep,\n      // shippingOption,\n      billingStep,\n      paymentStep,\n    ]);\n\n    const defaultActiveStep =\n      steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n    return steps.map((step, index) => {\n      const isPrevStepComplete = steps\n        .slice(0, index)\n        .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n      return {\n        ...step,\n        isActive: defaultActiveStep.type === step.type,\n        isBusy: false,\n        // A step is only editable if its previous step is complete or not required\n        isEditable: isPrevStepComplete && step.isEditable,\n      };\n    });\n  },\n);\n\nexport default getCheckoutStepStatuses;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n  checkoutService,\n  checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n  const { data, errors, statuses } = checkoutState;\n  const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n  const submitOrderError = errors.getSubmitOrderError() as CustomError;\n  const {\n    checkoutSettings: {\n      guestCheckoutEnabled: isGuestEnabled = false,\n      checkoutUserExperienceSettings = {\n        walletButtonsOnTop: false,\n        floatingLabelEnabled: false,\n      },\n    } = {},\n    links: {\n      loginLink: loginUrl = '',\n      createAccountLink: createAccountUrl = '',\n      cartLink: cartUrl = '',\n    } = {},\n    displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n  } = data.getConfig() || {};\n\n  const subscribeToConsignmentsSelector = createSelector(\n    ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n    (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n      return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n    },\n  );\n\n  const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n\n  const customerCreateError = errors?.getCreateCustomerAccountError();\n\n  return {\n    billingAddress: data.getBillingAddress(),\n    cart: data.getCart(),\n    clearError: checkoutService.clearError,\n    consignments: data.getConsignments(),\n    hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n    isGuestEnabled,\n    isLoadingCheckout: statuses.isLoadingCheckout(),\n    isPending: statuses.isPending(),\n    isPriceHiddenFromGuests,\n    isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n    loadCheckout: checkoutService.loadCheckout,\n    loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n    loginUrl,\n    cartUrl,\n    createAccountUrl,\n    promotions,\n    subscribeToConsignments: subscribeToConsignmentsSelector({\n      checkoutService,\n      checkoutState,\n    }),\n    steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    signUp: checkoutService.createCustomerAccount,\n    customerAccountFields: data.getCustomerAccountFields(),\n    createAccount: checkoutService.createCustomerAccount,\n    customerCreateError: customerCreateError && customerCreateError.message,\n  };\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { isApplePayWindow } from '../common/utility';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaypaypalcommerce',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n];\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\n    return (methodIds).filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    methodIds,\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {supportedMethodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .strict(true)\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .strict(true)\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n                onClick: () => onWalletButtonClick(methodId),\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [\n        containerId,\n        deinitializeCustomer,\n        initializeCustomer,\n        methodId,\n        onUnhandledError,\n        onWalletButtonClick,\n    ]);\n\n    return <div id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Component, ReactNode } from 'react';\n\nimport './OrderItemCount.scss';\n\ninterface OrderItemCountProps {\n  lineItems: LineItemMap;\n}\n\nclass OrderItemCount extends Component<OrderItemCountProps> {\n  render(): ReactNode {\n    const itemCount = this.props.lineItems?.physicalItems.length;\n\n    return <div className=\"order-item-count\">{itemCount} items in card</div>;\n  }\n}\n\nexport default OrderItemCount;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { Component, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../../../currency';\nimport giaCertificate from '../../../image/GIA-certificate.png';\n\nimport './PhysicalItemLineItem.scss';\n\ninterface LineItemProps {\n  item: PhysicalItem;\n}\n\nclass PhysicalItemLineItem extends Component<LineItemProps> {\n  render(): ReactNode {\n    const item = this.props.item;\n\n    return (\n      <div className=\"item-container\">\n        <div className=\"image-container\">\n          <img alt={item?.name} height={80} src={item?.imageUrl} width={80} />\n        </div>\n        <div className=\"item-details-container\">\n          <div className=\"item-name-cetificate\">\n            <div className=\"item-name\">{item.name}</div>\n            <div className=\"item-cetifcate\">\n              <img\n                className=\"checkout-cart-summary-product-certificate-image\"\n                height={16}\n                src={giaCertificate}\n                width={48}\n              />\n            </div>\n          </div>\n          <div className=\"item-price-container\">\n            <div className=\"item-qunatity\">{item.quantity}x</div>\n            <div className=\"item-price\">\n              <ShopperCurrency amount={item?.listPrice} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PhysicalItemLineItem;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Component, ReactNode } from 'react';\n\nimport { PhysicalItemLineItem } from '.';\n\nimport './OrderItemList.scss';\n\ninterface OrderItemListProps {\n  lineItems: LineItemMap;\n}\n\nclass OrderItemList extends Component<OrderItemListProps> {\n  render(): ReactNode {\n    return (\n      <div className=\"order-item\">\n        <div className=\"order-item-physical-item-list\">\n          {this.props.lineItems.physicalItems &&\n            this.props.lineItems.physicalItems?.map((item, index: number) => (\n              <PhysicalItemLineItem item={item} key={index} />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderItemList;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Component } from 'react';\n\nimport './OrderReviewSection.scss';\n\nimport { OrderItemCount, OrderItemList } from '.';\n\ninterface OrderReviewSectionProps {\n  lineItems: LineItemMap;\n}\n\nclass OrderReviewSection extends Component<OrderReviewSectionProps> {\n  render(): React.ReactNode {\n    return (\n      <div className=\"order-review-section\">\n        <div className=\"order-review-header\">Order Review</div>\n        <div className=\"order-review-body\">\n          <OrderItemCount lineItems={this.props.lineItems} />\n          <OrderItemList lineItems={this.props.lineItems} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderReviewSection;\n","import React, { Component, ReactNode } from 'react';\n\nimport './OrderBillingSummary.scss';\nimport { ShopperCurrency } from '../../currency';\n\ninterface OrderBillingSummaryProps {\n  subTotal: number | string;\n  discountAmount: number | string;\n  shippingCost: number | string;\n  tax: number | string;\n  total: number | string;\n  customerId: number;\n  orderId: number | string;\n}\n\nclass OrderBillingSummary extends Component<OrderBillingSummaryProps> {\n  render(): ReactNode {\n    const { subTotal, discountAmount, shippingCost, tax, total, customerId, orderId } = this.props;\n\n    return (\n      <div className=\"order-billing-summary-container\">\n        <div className=\"order-billing-summary-header\">Billing Summary</div>\n        <div className=\"order-billing-summary-body\">\n          <div className=\"order-billing-summary-price-details-section\">\n            <div className=\"order-billing-summary-subtotal\">\n              <div className=\"order-billing-summary-subtotal-title\">Subtotal</div>\n              <div className=\"order-billing-summary-subtotal-price\">\n                <ShopperCurrency amount={subTotal as number} />\n              </div>\n            </div>\n            <div className=\"order-billing-summary-discount\">\n              <div className=\"order-billing-summary-discount-title\">Discount</div>\n              <div className=\"order-billing-summary-discount-price\">\n                <ShopperCurrency amount={discountAmount as number} />\n              </div>\n            </div>\n            <div className=\"order-billing-summary-shipping\">\n              <div className=\"order-billing-summary-shipping-title\">Shiping</div>\n              <div className=\"order-billing-summary-shipping-price\">\n                <ShopperCurrency amount={shippingCost as number} />\n              </div>\n            </div>\n            <div className=\"order-billing-summary-tax\">\n              <div className=\"order-billing-summary-tax-title\">Tax</div>\n              <div className=\"order-billing-summary-tax-price\">\n                <ShopperCurrency amount={tax as number} />\n              </div>\n            </div>\n          </div>\n          <div className=\"order-billing-summary-grand-total-section\">\n            <div className=\"order-billing-summary-grand-total\">Grand Total</div>\n            <div className=\"order-billing-summary-grand-total-price\">\n              <ShopperCurrency amount={total as number} />\n            </div>\n          </div>\n          <div className=\"order-billing-summary-button-section\">\n            <div className=\"order-billing-summary-keep-shopping-container\">\n              <a\n                className=\"order-billing-summary-keep-shopping-link\"\n                href=\"https://www.lucd.art/search\"\n              >\n                Keep Shopping\n              </a>\n            </div>\n            {!!customerId && customerId !== 0 && (\n              <div className=\"order-billing-summary-order-details-container\">\n                <a\n                  className=\"order-billing-summary-order-details-link\"\n                  href={`https://www.lucd.art/order?id=${orderId}`}\n                >\n                  Order Details\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderBillingSummary;\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n  CheckoutSelectors,\n  Customer,\n  EmbeddedCheckoutMessenger,\n  EmbeddedCheckoutMessengerOptions,\n  Order,\n  StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { CreatedCustomer, SignUpFormValues } from '../guestSignup';\nimport LargeLoadingSpinner from '../ui/loading/LargeLoadingSpinner';\n\nimport { OrderBillingSummary, OrderReviewSection } from './customSections';\nimport ThankYouHeader from './ThankYouHeader';\n\nimport './OrderConfirmation.scss';\n\nexport interface OrderConfirmationState {\n  error?: Error;\n  hasSignedUp?: boolean;\n  isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n  containerId: string;\n  embeddedStylesheet: EmbeddedCheckoutStylesheet;\n  errorLogger: ErrorLogger;\n  orderId: number;\n  createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n  createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n  order?: Order;\n  config?: StoreConfig;\n  loadOrder(orderId: number): Promise<CheckoutSelectors>;\n  isLoadingOrder(): boolean;\n  customer?: Customer;\n}\n\nclass OrderConfirmation extends Component<\n  OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n  OrderConfirmationState\n> {\n  state: OrderConfirmationState = {};\n\n  private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n  componentDidMount(): void {\n    const {\n      containerId,\n      createEmbeddedMessenger,\n      embeddedStylesheet,\n      loadOrder,\n      orderId,\n      analyticsTracker,\n    } = this.props;\n\n    loadOrder(orderId)\n      .then(({ data }) => {\n        const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n        const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n        this.embeddedMessenger = messenger;\n\n        messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n        messenger.postFrameLoaded({ contentId: containerId });\n\n        analyticsTracker.orderPurchased();\n      })\n      .catch(this.handleUnhandledError);\n  }\n\n  render(): ReactNode {\n    const { order, config, isLoadingOrder } = this.props;\n\n    if (!order || !config || isLoadingOrder()) {\n      return (\n        <div className=\"order-confirmation-loading-container\">\n          <div className=\"order-confirmation-loading-wrapper\">\n            <LargeLoadingSpinner isLoading={true} />\n            <div className=\"order-confirmation-loading-text\">Loading...</div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={classNames('layout optimizedCheckout-contentPrimary', {\n          'is-embedded': isEmbedded(),\n        })}\n      >\n        <div className=\"layout-main\">\n          <div className=\"order-confirmation\">\n            <div className=\"order-confirmation-header\">\n              <div className=\"order-confirmation-thanks-header\">\n                <ThankYouHeader name={order.billingAddress.firstName} />\n              </div>\n              <div className=\"order-confirmation-note-container\">\n                <div className=\"order-confirmation-note\">\n                  <div className=\"order-confirmation-note-text\">\n                    Your order was completed successfully.\n                  </div>\n                  <div className=\"order-confirmation-note-text\">\n                    An e-mail reciept including the details about your order has been sent to the\n                    e-mail address provided. Please keep it for your records.\n                  </div>\n                </div>\n                <div className=\"order-confirmation-note-status\">Order Number {order?.orderId}</div>\n              </div>\n            </div>\n            <div className=\"order-confirmation-body\">\n              <OrderReviewSection lineItems={order?.lineItems} />\n              <OrderBillingSummary\n                customerId={order?.customerId}\n                discountAmount={order?.discountAmount}\n                orderId={order?.orderId}\n                shippingCost={order?.shippingCostTotal}\n                subTotal={order.baseAmount}\n                tax={order?.taxTotal}\n                total={order?.orderAmount}\n              />\n            </div>\n\n            {this.renderErrorModal()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderErrorModal(): ReactNode {\n    const { error } = this.state;\n\n    return (\n      <ErrorModal error={error} onClose={this.handleErrorModalClose} shouldShowErrorCode={false} />\n    );\n  }\n\n  private handleErrorModalClose: () => void = () => {\n    this.setState({ error: undefined });\n  };\n\n  private handleUnhandledError: (error: Error) => void = (error) => {\n    const { errorLogger } = this.props;\n\n    this.setState({ error });\n    errorLogger.log(error);\n\n    if (this.embeddedMessenger) {\n      this.embeddedMessenger.postError(error);\n    }\n  };\n}\n\nexport function mapToOrderConfirmationProps(\n  context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n  const {\n    checkoutState: {\n      data: { getOrder, getConfig, getCustomer },\n      statuses: { isLoadingOrder },\n    },\n    checkoutService,\n  } = context;\n\n  const config = getConfig();\n  const order = getOrder();\n  const customer = getCustomer();\n\n  return {\n    config,\n    isLoadingOrder,\n    loadOrder: checkoutService.loadOrder,\n    order,\n    customer,\n  };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <OrderConfirmation\n                                    {...this.props}\n                                    createAccount={this.createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption &&\n                consignment.selectedShippingOption.id &&\n                // Selected option is available\n                consignment.availableShippingOptions &&\n                consignment.availableShippingOptions.filter(\n                    ({ id }) => id === consignment.selectedShippingOption?.id,\n                ).length) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n  displayAdditionalInformation?: boolean;\n  method: ShippingOption;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n  displayAdditionalInformation = true,\n  method,\n}) => {\n  return (\n    <div className=\"shippingOption shippingOption--alt\">\n      <span className=\"shippingOption-price\">\n        <ShopperCurrency amount={method.cost} />\n      </span>\n      {method.imageUrl && (\n        <span className=\"shippingOption-figure\">\n          <img alt={method.description} className=\"shippingOption-img\" src={method.imageUrl} />\n        </span>\n      )}\n      <span className=\"shippingOption-desc\">\n        {method.description}\n        {method.transitTime && (\n          <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n        )}\n        {method.additionalDescription && displayAdditionalInformation && (\n          <ShippingOptionAdditionalDescription description={method.additionalDescription} />\n        )}\n      </span>\n    </div>\n  );\n};\n\nexport default StaticShippingOption;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nimport './Button.scss';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  isFullWidth?: boolean;\n  isLoading?: boolean;\n  size?: ButtonSize;\n  testId?: string;\n  variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Action = 'action',\n}\n\nexport enum ButtonSize {\n  Small = 'small',\n  Tiny = 'tiny',\n  Large = 'large',\n}\n\nfunction getClassName(\n  props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n  const { className, isFullWidth, isLoading, size, variant } = props;\n\n  return classNames(\n    'button',\n    className,\n    { 'button--primary': variant === ButtonVariant.Primary },\n    { 'button--tertiary': variant === ButtonVariant.Secondary },\n    { 'button--action': variant === ButtonVariant.Action },\n    { 'button--small': size === ButtonSize.Small },\n    { 'button--tiny': size === ButtonSize.Tiny },\n    { 'button--large': size === ButtonSize.Large },\n    { 'button--slab': isFullWidth },\n    {\n      'optimizedCheckout-buttonPrimary':\n        variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n    },\n    { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n    { 'is-loading': isLoading },\n  );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n  children,\n  className,\n  disabled,\n  isFullWidth,\n  isLoading,\n  size,\n  testId,\n  type,\n  variant,\n  ...rest\n}) => (\n  <button\n    {...rest}\n    className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n    data-test={testId}\n    disabled={disabled || isLoading}\n    type={type || 'button'}\n  >\n    {children} {isLoading && <span className=\"button-spinner\" />}\n  </button>\n);\n\nexport default Button;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n  Component,\n  createElement,\n  FunctionComponent,\n  memo,\n  useCallback,\n  useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n  additionalClassName?: string;\n  className?: string;\n  testId?: string;\n  onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n  additionalClassName,\n  className,\n  component,\n  render,\n  testId,\n  onChange,\n  ...rest\n}) => {\n  const renderInnerField = useCallback(\n    (props: FieldProps) => (\n      <InnerField\n        {...props}\n        additionalClassName={additionalClassName}\n        className={className}\n        component={component}\n        onChange={onChange}\n        render={render}\n        testId={testId}\n      />\n    ),\n    [additionalClassName, className, component, render, testId, onChange],\n  );\n\n  return <Field {...rest} render={renderInnerField} />;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n  ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n    const input = useMemo(\n      () => (\n        <InnerFieldInput\n          component={component}\n          field={field}\n          form={form}\n          onChange={onChange}\n          render={render}\n        />\n      ),\n      [field, form, onChange, component, render],\n    );\n\n    return (\n      <FormFieldContainer\n        additionalClassName={additionalClassName}\n        hasError={getIn(form.errors, field.name)}\n        testId={testId}\n      >\n        {input}\n      </FormFieldContainer>\n    );\n  },\n  (\n    { form: prevForm, field: prevField, ...prevProps },\n    { form: nextForm, field: nextField, ...nextProps },\n  ) =>\n    shallowEqual(prevProps, nextProps) &&\n    shallowEqual(prevForm, nextForm) &&\n    shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n  Pick<FieldConfig, 'component' | 'render'> & {\n    onChange?(value: string): void;\n  };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n  componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n    const {\n      field: { value },\n      onChange = noop,\n    } = this.props;\n    const comparableValue = isDate(value) ? value.getTime() : value;\n    const comparablePrevValue = isDate(prevField.value)\n      ? prevField.value.getTime()\n      : prevField.value;\n\n    if (comparableValue !== comparablePrevValue) {\n      onChange(value);\n    }\n  }\n\n  render() {\n    const { component = 'input', field, render } = this.props;\n\n    if (render) {\n      return (render as any)(this.props);\n    }\n\n    if (typeof component === 'string') {\n      return createElement(component as any, field);\n    }\n\n    return createElement(component as any, this.props);\n  }\n}\n\nexport default memo(BasicFormField);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n  id: string;\n  additionalClassName?: string;\n  value?: string | string[];\n  rows?: number;\n  fieldType?: DynamicFormFieldType;\n  options?: FormFieldItem[];\n  isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n  additionalClassName,\n  date,\n  fieldType,\n  id,\n  name,\n  onChange = noop,\n  options,\n  placeholder,\n  isFloatingLabelEnabled,\n  value,\n  ...rest\n}) => {\n  const { inputFormat } = date;\n  const handleDateChange = useCallback(\n    (dateValue, event) =>\n      onChange({\n        ...event,\n        target: {\n          name,\n          value: dateValue,\n        },\n      }),\n    [onChange, name],\n  );\n\n  switch (fieldType) {\n    case DynamicFormFieldType.dropdown:\n      return (\n        <>\n          <div\n            className={classNames(\n              { 'dropdown-chevron': !isFloatingLabelEnabled },\n              { 'floating-select-chevron': isFloatingLabelEnabled },\n            )}\n          >\n            <IconChevronDown />\n          </div>\n          <select\n            {...(rest as any)}\n            className={classNames(\n              { 'floating-select': isFloatingLabelEnabled },\n              'form-select optimizedCheckout-form-select',\n            )}\n            data-test={`${id}-select`}\n            id={id}\n            name={name}\n            onChange={onChange}\n            value={value === null ? '' : value}\n          >\n            {placeholder && <option value=\"\">{placeholder}</option>}\n            {options &&\n              options.map(({ label, value: optionValue }) => (\n                <option key={optionValue} value={optionValue}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </>\n      );\n\n    case DynamicFormFieldType.radio:\n      if (!options || !options.length) {\n        return null;\n      }\n\n      return (\n        <>\n          {options.map(({ label, value: optionValue }) => (\n            <RadioInput\n              {...rest}\n              checked={optionValue === value}\n              id={`${id}-${optionValue}`}\n              key={optionValue}\n              label={label}\n              name={name}\n              onChange={onChange}\n              testId={`${id}-${optionValue}-radio`}\n              value={optionValue}\n            />\n          ))}\n        </>\n      );\n\n    case DynamicFormFieldType.checkbox:\n      if (!options || !options.length) {\n        return null;\n      }\n\n      return (\n        <>\n          {options.map(({ label, value: optionValue }) => (\n            <CheckboxInput\n              {...rest}\n              checked={Array.isArray(value) ? value.includes(optionValue) : false}\n              id={`${id}-${optionValue}`}\n              key={optionValue}\n              label={label}\n              name={name}\n              onChange={onChange}\n              testId={`${id}-${optionValue}-checkbox`}\n              value={optionValue}\n            />\n          ))}\n        </>\n      );\n\n    case DynamicFormFieldType.date:\n      return (\n        <ReactDatePicker\n          {...(rest as any)}\n          autoComplete=\"off\"\n          // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n          // https://github.com/Hacker0x01/react-datepicker/issues/1357\n          // onChangeRaw={ rest.onChange }\n          calendarClassName=\"optimizedCheckout-contentPrimary\"\n          className={classNames('form-input optimizedCheckout-form-input', {\n            'floating-input': isFloatingLabelEnabled,\n          })}\n          dateFormat={inputFormat}\n          maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n          minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n          name={name}\n          onChange={handleDateChange}\n          placeholderText={inputFormat.toUpperCase()}\n          popperClassName=\"optimizedCheckout-contentPrimary\"\n          selected={isDate(value) ? value : undefined}\n        />\n      );\n\n    case DynamicFormFieldType.multiline:\n      return (\n        <TextArea\n          {...(rest as any)}\n          id={id}\n          isFloatingLabelEnabled={isFloatingLabelEnabled}\n          name={name}\n          onChange={onChange}\n          testId={`${id}-text`}\n          type={fieldType}\n          value={value}\n        />\n      );\n\n    default:\n      return (\n        <TextInput\n          {...rest}\n          id={id}\n          isFloatingLabelEnabled={isFloatingLabelEnabled}\n          name={name}\n          onChange={onChange}\n          placeholder={placeholder}\n          testId={`${id}-${fieldType === DynamicFormFieldType.password ? 'password' : 'text'}`}\n          type={fieldType}\n          value={value}\n        />\n      );\n  }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n  code: string;\n  name: string;\n}\n\nexport interface DynamicFormFieldProps {\n  field: FormFieldType;\n  inputId?: string;\n  extraClass?: string;\n  autocomplete?: string;\n  parentFieldName?: string;\n  placeholder?: string;\n  label?: ReactNode;\n  isFloatingLabelEnabled?: boolean;\n  onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n  field: {\n    fieldType,\n    type,\n    secret,\n    name,\n    label: fieldLabel,\n    required,\n    options,\n    max,\n    min,\n    maxLength,\n  },\n  parentFieldName,\n  onChange,\n  placeholder,\n  inputId,\n  autocomplete,\n  label,\n  extraClass,\n  isFloatingLabelEnabled,\n}) => {\n  const fieldInputId = inputId || name;\n  const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n  const isFloatingLabelSupportedFieldType = Boolean(\n    isFloatingLabelEnabled &&\n      (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) || !fieldType),\n  );\n  const labelComponent = useMemo(\n    () => (\n      <Label\n        htmlFor={fieldInputId}\n        id={`${fieldInputId}-label`}\n        isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n      >\n        {label || fieldLabel}\n        {!required && (\n          <>\n            {' '}\n            <small className=\"optimizedCheckout-contentSecondary\">\n              <TranslatedString id=\"common.optional_text\" />\n            </small>\n          </>\n        )}\n      </Label>\n    ),\n    [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n  );\n\n  const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n    if (fieldType === 'text') {\n      if (type === 'integer') {\n        return DynamicFormFieldType.number;\n      }\n\n      if (includes(name, 'phone') || includes(name, 'tel')) {\n        return DynamicFormFieldType.telephone;\n      }\n\n      return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n    }\n\n    return fieldType as DynamicFormFieldType;\n  }, [fieldType, type, secret, name]);\n\n  const renderInput = useCallback(\n    ({ field }: FieldProps<string>) => (\n      <DynamicInput\n        {...field}\n        aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n        autoComplete={autocomplete}\n        fieldType={dynamicFormFieldType}\n        id={fieldInputId}\n        isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n        max={max}\n        maxLength={maxLength || undefined}\n        min={min}\n        options={options && options.items}\n        placeholder={placeholder || (options && options.helperLabel)}\n        rows={options && (options as any).rows}\n      />\n    ),\n    [fieldInputId, max, maxLength, min, options, placeholder, dynamicFormFieldType, autocomplete],\n  );\n\n  return (\n    <div\n      className={classNames(\n        'dynamic-form-field',\n        { 'floating-form-field': isFloatingLabelSupportedFieldType },\n        extraClass,\n      )}\n    >\n      {fieldType === DynamicFormFieldType.checkbox ? (\n        <CheckboxGroupFormField\n          id={fieldInputId}\n          label={labelComponent}\n          name={fieldName}\n          onChange={onChange}\n          options={(options && options.items) || []}\n        />\n      ) : (\n        <FormField\n          id={fieldInputId}\n          input={renderInput}\n          isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n          label={labelComponent}\n          name={fieldName}\n          onChange={onChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(DynamicFormField);\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n  additionalClassName?: string;\n  name: string;\n  label?: ReactNode | ((fieldName: string) => ReactNode);\n  labelContent?: ReactNode;\n  footer?: ReactNode;\n  id?: string;\n  isFloatingLabelEnabled?: boolean;\n  input(field: FieldProps<string>): ReactNode;\n  onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n  additionalClassName,\n  labelContent,\n  label,\n  onChange,\n  footer,\n  input,\n  name,\n  id,\n  isFloatingLabelEnabled,\n}) => {\n  const renderField = useCallback(\n    (props) => (\n      <>\n        {isFloatingLabelEnabled && input(props)}\n\n        {label && (typeof label === 'function' ? label(name) : label)}\n        {labelContent && !label && (\n          <Label\n            htmlFor={name}\n            id={`${id ?? name}-label`}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n          >\n            {labelContent}\n          </Label>\n        )}\n\n        {!isFloatingLabelEnabled && input(props)}\n\n        <FormFieldError\n          errorId={`${id ?? name}-field-error-message`}\n          name={name}\n          testId={`${kebabCase(name)}-field-error-message`}\n        />\n\n        {footer}\n      </>\n    ),\n    [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n  );\n\n  return (\n    <BasicFormField\n      additionalClassName={additionalClassName}\n      name={name}\n      onChange={onChange}\n      render={renderField}\n    />\n  );\n};\n\nexport default memo(FormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n  additionalClassName?: string;\n  children: ReactNode;\n  className?: string;\n  hasError?: boolean;\n  testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n  additionalClassName,\n  children,\n  className,\n  hasError,\n  testId,\n}) => (\n  <FormContext.Consumer>\n    {({ isSubmitted }) => (\n      <div\n        className={\n          className ||\n          classNames('form-field', additionalClassName, {\n            'form-field--error': hasError && isSubmitted,\n          })\n        }\n        data-test={testId}\n      >\n        {children}\n      </div>\n    )}\n  </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  testId?: string;\n  isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n  (\n    { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n    ref: Ref<HTMLInputElement>,\n  ) => {\n    const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n    return (\n      <input\n        {...{\n          ...rest,\n          className: classNames(className, {\n            'floating-input':\n              isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n          }),\n          name,\n        }}\n        data-test={testId}\n        placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n        ref={ref}\n      />\n    );\n  },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n  additionalClassName?: string;\n  appearFocused?: boolean;\n  type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n  isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n  (\n    {\n      additionalClassName,\n      isFloatingLabelEnabled,\n      appearFocused,\n      type = 'text',\n      ...rest\n    }: TextInputProps,\n    ref: Ref<HTMLInputElement>,\n  ) => (\n    <Input\n      {...rest}\n      className={classNames(\n        'form-input',\n        'optimizedCheckout-form-input',\n        { 'form-input--focus': appearFocused },\n        { 'optimizedCheckout-form-input--focus': appearFocused },\n        additionalClassName,\n      )}\n      isFloatingLabelEnabled={isFloatingLabelEnabled}\n      ref={ref}\n      type={type}\n    />\n  ),\n);\n\nexport default TextInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport './LargeLoadingSpinner.scss';\n\nexport interface LoadingSpinnerProps {\n  isLoading: boolean;\n}\n\nconst LargeLoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <div className=\"large-loading-spinner-container\">\n      <div className=\"large-loading-spinner\" />\n    </div>\n  );\n};\n\nexport default memo(LargeLoadingSpinner);\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nimport './LoadingOverlay.scss';\n\nexport interface LoadingOverlayProps {\n  isLoading: boolean;\n  hideContentWhenLoading?: boolean;\n  unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n  children,\n  hideContentWhenLoading,\n  unmountContentWhenLoading,\n  isLoading,\n}) => {\n  if (hideContentWhenLoading || unmountContentWhenLoading) {\n    return (\n      <>\n        <LoadingSpinner isLoading={isLoading} />\n        {unmountContentWhenLoading && isLoading ? null : (\n          <div\n            style={{\n              display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n            }}\n          >\n            {children}\n          </div>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"loadingOverlay-container\">\n      {children}\n      {isLoading && <LoadingSpinner isLoading={isLoading} />}\n    </div>\n  );\n};\n\nexport default LoadingOverlay;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n  isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\n      <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n    </div>\n  );\n};\n\nexport default memo(LoadingSpinner);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    Opy = 'opy',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return isBraintreeFastlaneMethod(methodId) || isPayPalCommerceFastlaneMethod(methodId);\n};\n\nexport default isPaypalFastlaneMethod;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        paymentProviderCustomer?.authenticationState;\n\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized' &&\n        getConfig()?.checkoutSettings.features['PAYPAL-3996.paypal_fastlane_shipping_update'];\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '100%', top: '-100%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","value","ExtensionContext","extensionReducer","state","action","type","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","createReloadCheckoutHandler","commandType","ExtensionCommandType","handler","loadCheckout","getState","data","getCheckout","id","createSetIframeStyleHandler","extension","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","show","handlers","loadExtensions","this","preloadExtensions","extensions","getExtensions","cartId","getCart","parentOrigin","getConfig","links","siteLink","forEach","url","URL","searchParams","set","link","createElement","rel","as","href","toString","head","appendChild","renderExtension","container","region","getExtensionByRegion","registerHandlers","removeListeners","removers","remover","isRegionEnabled","Boolean","handlerProps","values","createHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","ExtensionProvider","useReducer","extensionState","extensionValues","extensionService","ExtensionService","AddressType","withCheckout","context","address","getBillingCountries","getShippingCountries","getBillingAddressFields","getShippingAddressFields","countries","fields","countryCode","memo","addressWithoutLocalization","localizeAddress","isValid","isValidAddress","filter","field","custom","isEmpty","console","log","className","firstName","lastName","phone","company","address1","address2","city","localizedProvince","postalCode","localizedCountry","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","name","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","stateOrProvince","stateOrProvinceCode","min","max","getFormFieldsValidationSchema","isEqualAddress","isEqual","normalizeAddress","isSameState","omit","customFields","isValidSync","mapAddressToFormValues","addressFormValues","fieldName","fieldType","defaultValue","find","fieldValue","getValue","shouldSaveAddress","Date","getDefaultValue","split","year","month","day","Number","displayNamePrefix","checkoutState","checkout","payments","showSameAsShippingLable","paypalFastlaneAddresses","usePayPalFastlaneAddress","showPayPalFastlaneLabel","payment","providerId","TranslatedString","StaticAddress","PoweredByPayPalFastlaneLabel","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","methods","join","UNSUPPORTED_METHODS","withExtension","createInjectHoc","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","PureComponent","currency","formId","isPaymentStepActive","isPending","subtotal","taxTotal","grandTotal","shippingCostTotal","discountAmount","cart","toCustomerCurrency","disabled","form","Component","withCurrency","withAnalytics","withLanguage","isUpdatingCheckout","updateCheckout","BillingSummary","CustomerViewType","DEFAULT_OPTIONS","count","interval","retry","fn","options","Promise","resolve","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","APPLE_PAY","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","window","isShowingWalletButtonsOnTop","onError","rest","ApplePayButton","containerId","AmazonPayV2Button","PayPalCommerceButton","CheckoutButton","paypalCommerceIds","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","config","availableMethodIds","checkoutSettings","remoteCheckoutProviders","customer","isGuest","checkEmbeddedSupport","onUnhandledError","onWalletButtonClick","error","position","left","top","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitialize","deinitializeCustomer","initialize","initializeCustomer","onClick","analyticsContext","useContext","Error","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","noop","useState","showSuggestion","setShowSuggestion","useEffect","bolt","onInit","hasBoltAccount","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","height","viewBox","width","xmlns","cx","cy","r","d","stroke","isCartEmpty","location","reload","isErrorWithType","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","getPasswordRequirements","minlength","allSlashes","RegExp","replace","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","errorInSignInEmail","createAccountErrorMessage","isRequestError","status","splitMessage","updatedItems","items","item","transformFormFieldsData","Form","testId","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","variant","preventDefault","onChange","renderInput","useCallback","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","expiry","minutes","Math","round","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","legend","Legend","hidden","role","tabIndex","withIconContainer","Toggle","openByDefault","toggle","Label","htmlFor","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","changeEmailLink","body","mapErrorMessage","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","Input","checked","setStatus","valSuccess","canSubscribe","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","renderField","fieldProps","buttonText","display","BasicFormField","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","handleChangeEmail","handleShowLogin","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isInitializing","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","CheckoutButtonList","isLoadingGuestForm","shouldShowEmailWatermark","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","features","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","icon","dangerouslySetInnerHTML","__html","banners","result","promotion","banner","index","text","isUsingMultiShipping","consignments","lineItems","some","consignment","lineItemIds","hasUnassignedLineItems","compactView","selectedShippingOption","showPayPalFastlaneAddressLabel","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","getLanguageService","title","ShippingOptionExpiredError","LargeLoadingSpinner","filterError","loadingSkeleton","ErrorBoundary","fallback","Suspense","queries","print","mobile","heading","isActive","isEditable","onEdit","summary","IconCheck","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","Billing","lazy","CartSummaryWrapper","DiscountCode","OrderComment","Payment","Shipping","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","hasSelectedShippingOptions","buttonConfigs","enableSignUp","handleCloseSignUpForm","handleSignUpUserSubmit","navigateToNextIncompleteStep","handleToggleMultiShipping","steps","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","navigateToOrderConfirmation","orderId","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","CheckoutStepType","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","getConsignments","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadPaymentMethodByIds","subscribeToConsignments","all","params","include","providers","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","messenger","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","promotions","customerCreateError","flexDirection","renderStep","renderCartSummary","Modal","additionalHeaderClassName","closeButtonLabel","IconClose","src","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","StaticBillingAddress","shippingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","mapToCheckoutProps","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","physicalItems","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","shippingAddressFields","experimentName","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","customerStep","shippingStep","billingStep","paymentStep","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","createAccountUrl","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","signUp","lastPathName","pathname","pop","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","code","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","size","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","shouldShowErrorCode","headers","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","ErrorLevelType","customConsole","tags","level","meta","Info","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","consoleLogger","beforeSend","denyUrls","integrations","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","hasOwnProperty","call","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","sort","a","b","EMPTY_ARRAY","freeze","isApplePayWindow","amount","heightOption","buttonHeight","hideText","supportedMethodIds","filterUnsupportedMethodIds","beautifyAmazonButton","amazonButton","shadowRoot","localeContext","initializeOptions","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","onComplete","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","catch","hasProto","path","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","then","response","itemCount","alt","imageUrl","quantity","ShopperCurrency","listPrice","subTotal","shippingCost","tax","total","customerId","handleErrorModalClose","loadOrder","isLoadingOrder","baseAmount","orderAmount","renderErrorModal","OrderConfirmation","accountService","confirmPassword","newsletter","itemId","isNil","parentId","findLineItems","getLineItemsCount","availableShippingOptions","addedByPromotion","cost","transitTime","additionalDescription","AlertType","Success","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Primary","Secondary","Action","Small","Tiny","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","errorId","forwardRef","withDate","date","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","maxLength","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","Medium","unmountContentWhenLoading","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","element","declaration","propertyName","getPropertyValue","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","pickProps","injectedProps","LocaleContext","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","translatedString","parsedString","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","country","states","subdivisions","useCheckout","addresses","paypalFastlaneAddress","bcAddress","isEqualToPayPalFastlaneAddress","isPayPalFastlaneCustomer","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","Provider","isFunction"],"sourceRoot":""}