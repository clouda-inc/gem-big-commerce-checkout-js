{"version":3,"file":"order-summary-0737cb58.js","mappings":"kLAaA,QAT8C,SAAC,G,IAAEA,EAAQ,WAAO,OAC5D,0BAAQC,UAAU,eACd,sBAAIA,UAAU,iDACV,gBAACC,EAAA,EAAgB,CAACC,GAAG,uBAExBH,EALuD,E,sECuFhE,QA/DwF,SAAC,GACvF,IAAAI,EAAa,gBACbC,EAAK,QACLC,EAAa,gBACbC,EAAe,kBACfC,EAAU,aACVC,EAAmB,sBACnBC,EAAS,YACTC,EAAK,QACFC,GAA0B,cAT0D,oHAWjFC,GAAsB,IAAAC,UAAQ,WAAM,SAAAC,EAAA,GAAmBL,EAAnB,GAA+B,CAACA,IACpEM,EAAsBZ,GAAiBC,GAASA,EAAMY,OAAS,EAErE,OACE,2BAAShB,UAAU,sCAAqC,YAAW,QACjE,gBAAC,EAAkB,KAAEO,GAErB,gBAACU,EAAA,EAAmB,KAClB,gBAACC,EAAA,EAAiB,CAACC,uBAAqB,EAACC,MAAOR,KAGlD,gBAACS,EAAA,EAAS,CAACC,OAAM,2BAEjB,gBAACL,EAAA,EAAmB,KAClB,gBAACM,EAAA,GAAqB,eACpBpB,cAAeA,EACfC,MAAOA,GACHO,IAELH,GAGH,gBAACS,EAAA,EAAmB,KAClB,gBAACO,EAAA,EAAiB,CAChBC,YAAaf,EACbgB,oBAAqBpB,EAAgBqB,KACrCC,kBAAmBvB,EAAcsB,QAIpCZ,GACC,gBAACE,EAAA,EAAmB,KAClB,sBACEjB,UAAU,uEAAsE,YACtE,YAEV,gBAACC,EAAA,EAAgB,CAACC,GAAG,0BAErBE,GAAS,IAAIyB,KAAI,SAACC,EAAKC,GAAU,OACjC,gBAACC,EAAA,EAAiB,CAChBC,OAAQH,EAAIG,OACZC,IAAKH,EACLI,MAAOL,EAAIM,KACXC,OAAO,cALwB,KAY7C,C","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\n    <header className=\"cart-header\">\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </h3>\n        {children}\n    </header>\n);\n\nexport default OrderSummaryHeader;\n","import {\n  ExtensionRegion,\n  LineItemMap,\n  ShopperCurrency,\n  StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\n\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryProps {\n  lineItems: LineItemMap;\n  total: number;\n  headerLink: ReactNode;\n  storeCurrency: StoreCurrency;\n  shopperCurrency: ShopperCurrency;\n  additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n  isTaxIncluded,\n  taxes,\n  storeCurrency,\n  shopperCurrency,\n  headerLink,\n  additionalLineItems,\n  lineItems,\n  total,\n  ...orderSummarySubtotalsProps\n}) => {\n  const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n  const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n  return (\n    <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n      <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\n\n      <OrderSummarySection>\n        <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\n      </OrderSummarySection>\n\n      <Extension region={ExtensionRegion.SummaryLastItemAfter} />\n\n      <OrderSummarySection>\n        <OrderSummarySubtotals\n          isTaxIncluded={isTaxIncluded}\n          taxes={taxes}\n          {...orderSummarySubtotalsProps}\n        />\n        {additionalLineItems}\n      </OrderSummarySection>\n\n      <OrderSummarySection>\n        <OrderSummaryTotal\n          orderAmount={total}\n          shopperCurrencyCode={shopperCurrency.code}\n          storeCurrencyCode={storeCurrency.code}\n        />\n      </OrderSummarySection>\n\n      {displayInclusiveTax && (\n        <OrderSummarySection>\n          <h5\n            className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n            data-test=\"tax-text\"\n          >\n            <TranslatedString id=\"tax.inclusive_label\" />\n          </h5>\n          {(taxes || []).map((tax, index) => (\n            <OrderSummaryPrice\n              amount={tax.amount}\n              key={index}\n              label={tax.name}\n              testId=\"cart-taxes\"\n            />\n          ))}\n        </OrderSummarySection>\n      )}\n    </article>\n  );\n};\n\nexport default OrderSummary;\n"],"names":["children","className","TranslatedString","id","isTaxIncluded","taxes","storeCurrency","shopperCurrency","headerLink","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}