{"version":3,"file":"cart-summary-wrapper-d00b9ddf.js","mappings":"6NAaA,2B,8CAoCA,QApC2B,oBACzB,YAAAA,OAAA,WACQ,MAAyBC,KAAKC,MAA5BC,EAAQ,WAAEC,EAAQ,WAE1B,OACE,uBAAKC,UAAU,kCAAkCC,IAAKH,aAAQ,EAARA,EAAUI,IAC9D,uBAAKF,UAAU,yCACb,uBAAKA,UAAU,8BAA8BG,IAAKL,aAAQ,EAARA,EAAUM,YAE9D,uBAAKJ,UAAU,yCACb,uBAAKA,UAAU,gDACb,uBAAKA,UAAU,sCAAsCF,aAAQ,EAARA,EAAUO,MAC/D,uBAAKL,UAAU,6CACb,uBACEA,UAAU,kDACVM,OAAQ,GACRH,IAAK,IACLI,MAAO,OAIb,uBAAKP,UAAU,iDACb,uBAAKA,UAAU,0CACb,4BACE,qBAAGA,UAAU,gDAAgDF,aAAQ,EAARA,EAAUU,UACvE,qBAAGR,UAAU,+CAA6C,OAG9D,uBAAKA,UAAU,uCACZD,EAASU,mBAAmBX,aAAQ,EAARA,EAAUY,cAMnD,EACF,EApCA,CAA2B,EAAAC,WAsC3B,SAAe,EAAAC,EAAA,GAAaC,GCvC5B,+B,8CA0BA,QA1BiC,oBAC/B,YAAAlB,OAAA,W,oBACUmB,EAASlB,KAAKC,MAAK,KAE3B,OACE,gBAAC,EAAAkB,SAAQ,CAACC,SAAU,2CACF,QAAf,EAAAF,aAAI,EAAJA,EAAMG,iBAAS,eAAEC,iBAA+C,QAA9B,EAAe,QAAf,EAAAJ,aAAI,EAAJA,EAAMG,iBAAS,eAAEC,qBAAa,eAAEC,QAAS,GAC1E,2BACE,uBAAKnB,UAAU,+BAA6B,gBAC5C,uBAAKA,UAAU,mCACb,uBAAKA,UAAU,oCAC0B,QAAtC,EAA8B,QAA9B,EAAe,QAAf,EAAAc,aAAI,EAAJA,EAAMG,iBAAS,eAAEC,qBAAa,eAAEC,cAAM,QAAI,E,mBAE7B,QAAf,EAAAL,aAAI,EAAJA,EAAMG,iBAAS,eAAEC,gBAChB,uBAAKlB,UAAU,oCACgB,QAA5B,EAAAc,EAAKG,UAAUC,qBAAa,eAAEE,KAAI,SAACtB,GAAa,OAC/C,gBAAC,EAAY,CAACG,IAAKH,aAAQ,EAARA,EAAUI,GAAIJ,SAAUA,GADI,OAUjE,EACF,EA1BA,CAAiC,EAAAa,WA4BjC,SAAe,EAAAU,EAAA,IAAc,EAAAC,EAAA,IAAa,EAAAC,EAAA,GAAaC,EAAA,EAAb,CAAiCC,I","sources":["webpack://checkout/./packages/core/src/app/cart/customeCart/CartLineItem.tsx","webpack://checkout/./packages/core/src/app/cart/customeCart/CartSummaryWrapper.tsx"],"sourcesContent":["import { LineItem } from '@bigcommerce/checkout-sdk';\nimport React, { Component, ReactNode } from 'react';\n\nimport './CartLineItem.scss';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nimport giaCertificate from '../../image/GIA-certificate.png';\n\ninterface CartLineItemProps {\n  lineItem: LineItem;\n}\n\nclass CartLineItem extends Component<CartLineItemProps & WithCurrencyProps> {\n  render(): ReactNode {\n    const { lineItem, currency } = this.props;\n\n    return (\n      <div className=\"checkout-cart-summary-line-item\" key={lineItem?.id}>\n        <div className=\"checkout-cart-summary-image-container\">\n          <img className=\"checkout-cart-summary-image\" src={lineItem?.imageUrl} />\n        </div>\n        <div className=\"checkout-cart-summary-detaile-wrapper\">\n          <div className=\"checkout-cart-summary-product-name-container\">\n            <div className=\"checkout-cart-summary-product-name\">{lineItem?.name}</div>\n            <div className=\"checkout-cart-summary-product-certificate\">\n              <img\n                className=\"checkout-cart-summary-product-certificate-image\"\n                height={16}\n                src={giaCertificate}\n                width={48}\n              />\n            </div>\n          </div>\n          <div className=\"checkout-cart-summary-product-price-container\">\n            <div className=\"checkout-cart-summary-product-quantity\">\n              <span>\n                <p className=\"checkout-cart-summary-product-quantity-value\">{lineItem?.quantity}</p>\n                <p className=\"checkout-cart-summary-product-quantity-unit\">x</p>\n              </span>\n            </div>\n            <div className=\"checkout-cart-summary-product-price\">\n              {currency.toCustomerCurrency(lineItem?.listPrice)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withCurrency(CartLineItem);\n","import React, { Component, ReactNode, Suspense } from 'react';\n\nimport { withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { withAnalytics } from '../../analytics';\nimport { withCheckout } from '../../checkout';\nimport { CheckoutState, WithCheckoutProps } from '../../checkout/Checkout';\nimport mapToCheckoutProps from '../../checkout/mapToCheckoutProps';\n\nimport CartLineItem from './CartLineItem';\nimport './CartSummaryWrapper.scss';\n\nclass CartSummaryWrapper extends Component<WithCheckoutProps & WithLanguageProps, CheckoutState> {\n  render(): ReactNode {\n    const { cart } = this.props;\n\n    return (\n      <Suspense fallback={<div>Loading...</div>}>\n        {cart?.lineItems?.physicalItems && cart?.lineItems?.physicalItems?.length > 0 && (\n          <div>\n            <div className=\"checkout-cart-summary-title\">Order Review</div>\n            <div className=\"checkout-cart-summary-item-list\">\n              <div className=\"checkout-cart-summary-item-count\">\n                {cart?.lineItems?.physicalItems?.length ?? 0} items in card\n              </div>\n              {cart?.lineItems?.physicalItems && (\n                <div className=\"checkout-cart-summary-line-items\">\n                  {cart.lineItems.physicalItems?.map((lineItem) => (\n                    <CartLineItem key={lineItem?.id} lineItem={lineItem} />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Suspense>\n    );\n  }\n}\n\nexport default withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(CartSummaryWrapper)));\n"],"names":["render","this","props","lineItem","currency","className","key","id","src","imageUrl","name","height","width","quantity","toCustomerCurrency","listPrice","Component","withCurrency","CartLineItem","cart","Suspense","fallback","lineItems","physicalItems","length","map","withAnalytics","withLanguage","withCheckout","mapToCheckoutProps","CartSummaryWrapper"],"sourceRoot":""}